
Eindopdracht.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  00000970  00000a04  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000970  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800106  00800106  00000a0a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000a0a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000a68  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a8  00000000  00000000  00000aa4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001083  00000000  00000000  00000b4c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b32  00000000  00000000  00001bcf  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000007a0  00000000  00000000  00002701  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001c4  00000000  00000000  00002ea4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000611  00000000  00000000  00003068  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000691  00000000  00000000  00003679  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000088  00000000  00000000  00003d0a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	4d c0       	rjmp	.+154    	; 0x9c <__ctors_end>
   2:	00 00       	nop
   4:	cd c0       	rjmp	.+410    	; 0x1a0 <__vector_1>
   6:	00 00       	nop
   8:	66 c0       	rjmp	.+204    	; 0xd6 <__bad_interrupt>
   a:	00 00       	nop
   c:	64 c0       	rjmp	.+200    	; 0xd6 <__bad_interrupt>
   e:	00 00       	nop
  10:	62 c0       	rjmp	.+196    	; 0xd6 <__bad_interrupt>
  12:	00 00       	nop
  14:	60 c0       	rjmp	.+192    	; 0xd6 <__bad_interrupt>
  16:	00 00       	nop
  18:	5e c0       	rjmp	.+188    	; 0xd6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	5c c0       	rjmp	.+184    	; 0xd6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	5a c0       	rjmp	.+180    	; 0xd6 <__bad_interrupt>
  22:	00 00       	nop
  24:	58 c0       	rjmp	.+176    	; 0xd6 <__bad_interrupt>
  26:	00 00       	nop
  28:	56 c0       	rjmp	.+172    	; 0xd6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	54 c0       	rjmp	.+168    	; 0xd6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	52 c0       	rjmp	.+164    	; 0xd6 <__bad_interrupt>
  32:	00 00       	nop
  34:	50 c0       	rjmp	.+160    	; 0xd6 <__bad_interrupt>
  36:	00 00       	nop
  38:	4e c0       	rjmp	.+156    	; 0xd6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	4c c0       	rjmp	.+152    	; 0xd6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	4a c0       	rjmp	.+148    	; 0xd6 <__bad_interrupt>
  42:	00 00       	nop
  44:	48 c0       	rjmp	.+144    	; 0xd6 <__bad_interrupt>
  46:	00 00       	nop
  48:	46 c0       	rjmp	.+140    	; 0xd6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	44 c0       	rjmp	.+136    	; 0xd6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	42 c0       	rjmp	.+132    	; 0xd6 <__bad_interrupt>
  52:	00 00       	nop
  54:	40 c0       	rjmp	.+128    	; 0xd6 <__bad_interrupt>
  56:	00 00       	nop
  58:	3e c0       	rjmp	.+124    	; 0xd6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	3c c0       	rjmp	.+120    	; 0xd6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	3a c0       	rjmp	.+116    	; 0xd6 <__bad_interrupt>
  62:	00 00       	nop
  64:	38 c0       	rjmp	.+112    	; 0xd6 <__bad_interrupt>
  66:	00 00       	nop
  68:	36 c0       	rjmp	.+108    	; 0xd6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	34 c0       	rjmp	.+104    	; 0xd6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	32 c0       	rjmp	.+100    	; 0xd6 <__bad_interrupt>
  72:	00 00       	nop
  74:	30 c0       	rjmp	.+96     	; 0xd6 <__bad_interrupt>
  76:	00 00       	nop
  78:	2e c0       	rjmp	.+92     	; 0xd6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	2c c0       	rjmp	.+88     	; 0xd6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	2a c0       	rjmp	.+84     	; 0xd6 <__bad_interrupt>
  82:	00 00       	nop
  84:	28 c0       	rjmp	.+80     	; 0xd6 <__bad_interrupt>
  86:	00 00       	nop
  88:	26 c0       	rjmp	.+76     	; 0xd6 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	58 01       	movw	r10, r16
  8e:	5b 01       	movw	r10, r22
  90:	5e 01       	movw	r10, r28
  92:	61 01       	movw	r12, r2
  94:	64 01       	movw	r12, r8
  96:	67 01       	movw	r12, r14
  98:	6a 01       	movw	r12, r20
  9a:	6d 01       	movw	r12, r26

0000009c <__ctors_end>:
  9c:	11 24       	eor	r1, r1
  9e:	1f be       	out	0x3f, r1	; 63
  a0:	cf ef       	ldi	r28, 0xFF	; 255
  a2:	d0 e1       	ldi	r29, 0x10	; 16
  a4:	de bf       	out	0x3e, r29	; 62
  a6:	cd bf       	out	0x3d, r28	; 61

000000a8 <__do_copy_data>:
  a8:	11 e0       	ldi	r17, 0x01	; 1
  aa:	a0 e0       	ldi	r26, 0x00	; 0
  ac:	b1 e0       	ldi	r27, 0x01	; 1
  ae:	e0 e7       	ldi	r30, 0x70	; 112
  b0:	f9 e0       	ldi	r31, 0x09	; 9
  b2:	00 e0       	ldi	r16, 0x00	; 0
  b4:	0b bf       	out	0x3b, r16	; 59
  b6:	02 c0       	rjmp	.+4      	; 0xbc <__do_copy_data+0x14>
  b8:	07 90       	elpm	r0, Z+
  ba:	0d 92       	st	X+, r0
  bc:	a6 30       	cpi	r26, 0x06	; 6
  be:	b1 07       	cpc	r27, r17
  c0:	d9 f7       	brne	.-10     	; 0xb8 <__do_copy_data+0x10>

000000c2 <__do_clear_bss>:
  c2:	21 e0       	ldi	r18, 0x01	; 1
  c4:	a6 e0       	ldi	r26, 0x06	; 6
  c6:	b1 e0       	ldi	r27, 0x01	; 1
  c8:	01 c0       	rjmp	.+2      	; 0xcc <.do_clear_bss_start>

000000ca <.do_clear_bss_loop>:
  ca:	1d 92       	st	X+, r1

000000cc <.do_clear_bss_start>:
  cc:	a8 30       	cpi	r26, 0x08	; 8
  ce:	b2 07       	cpc	r27, r18
  d0:	e1 f7       	brne	.-8      	; 0xca <.do_clear_bss_loop>
  d2:	29 d1       	rcall	.+594    	; 0x326 <main>
  d4:	4b c4       	rjmp	.+2198   	; 0x96c <_exit>

000000d6 <__bad_interrupt>:
  d6:	94 cf       	rjmp	.-216    	; 0x0 <__vectors>

000000d8 <lcd_strobe_lcd_e>:
outputs:
notes:			According datasheet HD44780
Version :    	DMK, Initial code
*******************************************************************/
void lcd_strobe_lcd_e(void) {
	PORTA |= (1<<LCD_E);	// E high
  d8:	8b b3       	in	r24, 0x1b	; 27
  da:	80 64       	ori	r24, 0x40	; 64
  dc:	8b bb       	out	0x1b, r24	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  de:	8f ec       	ldi	r24, 0xCF	; 207
  e0:	97 e0       	ldi	r25, 0x07	; 7
  e2:	01 97       	sbiw	r24, 0x01	; 1
  e4:	f1 f7       	brne	.-4      	; 0xe2 <lcd_strobe_lcd_e+0xa>
  e6:	00 c0       	rjmp	.+0      	; 0xe8 <lcd_strobe_lcd_e+0x10>
  e8:	00 00       	nop
	_delay_ms(1);			// nodig
	PORTA &= ~(1<<LCD_E);  	// E low
  ea:	8b b3       	in	r24, 0x1b	; 27
  ec:	8f 7b       	andi	r24, 0xBF	; 191
  ee:	8b bb       	out	0x1b, r24	; 27
  f0:	8f ec       	ldi	r24, 0xCF	; 207
  f2:	97 e0       	ldi	r25, 0x07	; 7
  f4:	01 97       	sbiw	r24, 0x01	; 1
  f6:	f1 f7       	brne	.-4      	; 0xf4 <lcd_strobe_lcd_e+0x1c>
  f8:	00 c0       	rjmp	.+0      	; 0xfa <lcd_strobe_lcd_e+0x22>
  fa:	00 00       	nop
  fc:	08 95       	ret

000000fe <init_4bits_mode>:
inputs:
outputs:
notes:			According datasheet HD44780 table 12
Version :    	DMK, Initial code
*******************************************************************/
void init_4bits_mode(void) {
  fe:	cf 93       	push	r28
	// PORTC output mode and all low (also E and RS pin)
	DDRC = 0xFF;
 100:	8f ef       	ldi	r24, 0xFF	; 255
 102:	84 bb       	out	0x14, r24	; 20
	DDRA = 0xFF;
 104:	8a bb       	out	0x1a, r24	; 26
	PORTC = 0x00;
 106:	15 ba       	out	0x15, r1	; 21
	PORTA = 0x00;
 108:	1b ba       	out	0x1b, r1	; 27
	//PORTA = 0xFF;

	// Step 2 (table 12)
	PORTC = 0x20;	// function set
 10a:	c0 e2       	ldi	r28, 0x20	; 32
 10c:	c5 bb       	out	0x15, r28	; 21
	lcd_strobe_lcd_e();
 10e:	e4 df       	rcall	.-56     	; 0xd8 <lcd_strobe_lcd_e>

	// Step 3 (table 12)
	PORTC = 0x20;   // function set
	lcd_strobe_lcd_e();
 110:	c5 bb       	out	0x15, r28	; 21
 112:	e2 df       	rcall	.-60     	; 0xd8 <lcd_strobe_lcd_e>
	PORTC = 0x80;
 114:	80 e8       	ldi	r24, 0x80	; 128
	lcd_strobe_lcd_e();
 116:	85 bb       	out	0x15, r24	; 21

	// Step 4 (table 12)
	PORTC = 0x00;   // Display on/off control
 118:	df df       	rcall	.-66     	; 0xd8 <lcd_strobe_lcd_e>
	lcd_strobe_lcd_e();
 11a:	15 ba       	out	0x15, r1	; 21
	PORTC = 0xF0;
 11c:	dd df       	rcall	.-70     	; 0xd8 <lcd_strobe_lcd_e>
	lcd_strobe_lcd_e();
 11e:	80 ef       	ldi	r24, 0xF0	; 240

	// Step 4 (table 12)
	PORTC = 0x00;   // Entry mode set
 120:	85 bb       	out	0x15, r24	; 21
	lcd_strobe_lcd_e();
 122:	da df       	rcall	.-76     	; 0xd8 <lcd_strobe_lcd_e>
 124:	15 ba       	out	0x15, r1	; 21
	PORTC = 0x60;
 126:	d8 df       	rcall	.-80     	; 0xd8 <lcd_strobe_lcd_e>
 128:	80 e6       	ldi	r24, 0x60	; 96
	lcd_strobe_lcd_e();
 12a:	85 bb       	out	0x15, r24	; 21
 12c:	d5 df       	rcall	.-86     	; 0xd8 <lcd_strobe_lcd_e>
}
 12e:	cf 91       	pop	r28
 130:	08 95       	ret

00000132 <lcd_write_data>:
inputs:			byte - written to LCD
outputs:
notes:			According datasheet HD44780 table 12
Version :    	DMK, Initial code
*******************************************************************/
void lcd_write_data(unsigned char byte) {
 132:	cf 93       	push	r28
 134:	c8 2f       	mov	r28, r24
	// First nibble.
	PORTC = byte;
 136:	85 bb       	out	0x15, r24	; 21
	PORTA |= (1<<LCD_RS);
 138:	8b b3       	in	r24, 0x1b	; 27
 13a:	80 61       	ori	r24, 0x10	; 16
 13c:	8b bb       	out	0x1b, r24	; 27
	lcd_strobe_lcd_e();
 13e:	cc df       	rcall	.-104    	; 0xd8 <lcd_strobe_lcd_e>

	// Second nibble
	PORTC = (byte<<4);
 140:	c2 95       	swap	r28
 142:	c0 7f       	andi	r28, 0xF0	; 240
 144:	c5 bb       	out	0x15, r28	; 21
	PORTA |= (1<<LCD_RS);
 146:	8b b3       	in	r24, 0x1b	; 27
 148:	80 61       	ori	r24, 0x10	; 16
	lcd_strobe_lcd_e();
 14a:	8b bb       	out	0x1b, r24	; 27
 14c:	c5 df       	rcall	.-118    	; 0xd8 <lcd_strobe_lcd_e>
}
 14e:	cf 91       	pop	r28
 150:	08 95       	ret

00000152 <lcd_write_string>:
inputs:
outputs:
notes:			According datasheet HD44780 table 12
Version :    	DMK, Initial code
*******************************************************************/
void lcd_write_string(char *str) {
 152:	cf 93       	push	r28
 154:	df 93       	push	r29
 156:	ec 01       	movw	r28, r24
	// while(*str) {
	// 	lcd_write_data(*str++);
	// }

	// of met een for:
	for(;*str; str++){
 158:	02 c0       	rjmp	.+4      	; 0x15e <lcd_write_string+0xc>
		lcd_write_data(*str);
 15a:	eb df       	rcall	.-42     	; 0x132 <lcd_write_data>
	// while(*str) {
	// 	lcd_write_data(*str++);
	// }

	// of met een for:
	for(;*str; str++){
 15c:	21 96       	adiw	r28, 0x01	; 1
 15e:	88 81       	ld	r24, Y
 160:	81 11       	cpse	r24, r1
 162:	fb cf       	rjmp	.-10     	; 0x15a <lcd_write_string+0x8>
		lcd_write_data(*str);
	}
}
 164:	df 91       	pop	r29
 166:	cf 91       	pop	r28
 168:	08 95       	ret

0000016a <lcd_write_command>:
inputs:			byte - written to LCD
outputs:
notes:			According datasheet HD44780 table 12
Version :    	DMK, Initial code
*******************************************************************/
void lcd_write_command(unsigned char byte) {
 16a:	cf 93       	push	r28
 16c:	c8 2f       	mov	r28, r24
	// First nibble.
	PORTC = byte;
 16e:	85 bb       	out	0x15, r24	; 21
	PORTA &= ~(1<<LCD_RS);
 170:	8b b3       	in	r24, 0x1b	; 27
 172:	8f 7e       	andi	r24, 0xEF	; 239
 174:	8b bb       	out	0x1b, r24	; 27
	lcd_strobe_lcd_e();
 176:	b0 df       	rcall	.-160    	; 0xd8 <lcd_strobe_lcd_e>

	// Second nibble
	PORTC = (byte<<4);
 178:	c2 95       	swap	r28
 17a:	c0 7f       	andi	r28, 0xF0	; 240
 17c:	c5 bb       	out	0x15, r28	; 21
	PORTA &= ~(1<<LCD_RS);
 17e:	8b b3       	in	r24, 0x1b	; 27
 180:	8f 7e       	andi	r24, 0xEF	; 239
	lcd_strobe_lcd_e();
 182:	8b bb       	out	0x1b, r24	; 27
 184:	a9 df       	rcall	.-174    	; 0xd8 <lcd_strobe_lcd_e>
}
 186:	cf 91       	pop	r28
 188:	08 95       	ret

0000018a <lcd_clear>:


void lcd_clear() {
	lcd_write_command (0x01);						//Leeg display
 18a:	81 e0       	ldi	r24, 0x01	; 1
 18c:	ee df       	rcall	.-36     	; 0x16a <lcd_write_command>
 18e:	8f e9       	ldi	r24, 0x9F	; 159
 190:	9f e0       	ldi	r25, 0x0F	; 15
 192:	01 97       	sbiw	r24, 0x01	; 1
 194:	f1 f7       	brne	.-4      	; 0x192 <lcd_clear+0x8>
 196:	00 c0       	rjmp	.+0      	; 0x198 <lcd_clear+0xe>
 198:	00 00       	nop
	_delay_ms(2);
	lcd_write_command (0x80);						//Cursor terug naar start
 19a:	80 e8       	ldi	r24, 0x80	; 128
 19c:	e6 cf       	rjmp	.-52     	; 0x16a <lcd_write_command>
 19e:	08 95       	ret

000001a0 <__vector_1>:
	lcd_clear();
	itoa(distance, snum, 10);;
	lcd_write_string(snum);
	
	wait_ms(200);
}
 1a0:	1f 92       	push	r1
 1a2:	0f 92       	push	r0
 1a4:	0f b6       	in	r0, 0x3f	; 63
 1a6:	0f 92       	push	r0
 1a8:	11 24       	eor	r1, r1
 1aa:	8f 93       	push	r24
 1ac:	9f 93       	push	r25
 1ae:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <int_stat>
 1b2:	81 30       	cpi	r24, 0x01	; 1
 1b4:	41 f4       	brne	.+16     	; 0x1c6 <__vector_1+0x26>
 1b6:	82 e0       	ldi	r24, 0x02	; 2
 1b8:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__TEXT_REGION_LENGTH__+0x7e006a>
 1bc:	1d bc       	out	0x2d, r1	; 45
 1be:	1c bc       	out	0x2c, r1	; 44
 1c0:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <int_stat>
 1c4:	0c c0       	rjmp	.+24     	; 0x1de <__vector_1+0x3e>
 1c6:	83 e0       	ldi	r24, 0x03	; 3
 1c8:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__TEXT_REGION_LENGTH__+0x7e006a>
 1cc:	8c b5       	in	r24, 0x2c	; 44
 1ce:	9d b5       	in	r25, 0x2d	; 45
 1d0:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 1d4:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 1d8:	81 e0       	ldi	r24, 0x01	; 1
 1da:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <int_stat>
 1de:	9f 91       	pop	r25
 1e0:	8f 91       	pop	r24
 1e2:	0f 90       	pop	r0
 1e4:	0f be       	out	0x3f, r0	; 63
 1e6:	0f 90       	pop	r0
 1e8:	1f 90       	pop	r1
 1ea:	18 95       	reti

000001ec <write_int_lcd>:

void write_int_lcd(int number){
 1ec:	af 92       	push	r10
 1ee:	bf 92       	push	r11
 1f0:	cf 92       	push	r12
 1f2:	df 92       	push	r13
 1f4:	ef 92       	push	r14
 1f6:	ff 92       	push	r15
 1f8:	0f 93       	push	r16
 1fa:	1f 93       	push	r17
 1fc:	cf 93       	push	r28
 1fe:	df 93       	push	r29
 200:	cd b7       	in	r28, 0x3d	; 61
 202:	de b7       	in	r29, 0x3e	; 62
 204:	d8 2e       	mov	r13, r24
 206:	c9 2e       	mov	r12, r25
	int length = snprintf(NULL, 0, "%d", number);
	char str[length + 1];
	snprintf(str, length + 1, "%d", number);
	lcd_write_string(str);
}
 208:	ad b6       	in	r10, 0x3d	; 61
 20a:	be b6       	in	r11, 0x3e	; 62
	
	wait_ms(200);
}

void write_int_lcd(int number){
	int length = snprintf(NULL, 0, "%d", number);
 20c:	9f 93       	push	r25
 20e:	8f 93       	push	r24
 210:	0f 2e       	mov	r0, r31
 212:	f3 e0       	ldi	r31, 0x03	; 3
 214:	ef 2e       	mov	r14, r31
 216:	f1 e0       	ldi	r31, 0x01	; 1
 218:	ff 2e       	mov	r15, r31
 21a:	f0 2d       	mov	r31, r0
 21c:	ff 92       	push	r15
 21e:	ef 92       	push	r14
 220:	1f 92       	push	r1
 222:	1f 92       	push	r1
 224:	1f 92       	push	r1
 226:	1f 92       	push	r1
 228:	b8 d0       	rcall	.+368    	; 0x39a <snprintf>
	char str[length + 1];
 22a:	01 96       	adiw	r24, 0x01	; 1
 22c:	2d b7       	in	r18, 0x3d	; 61
 22e:	3e b7       	in	r19, 0x3e	; 62
 230:	28 5f       	subi	r18, 0xF8	; 248
 232:	3f 4f       	sbci	r19, 0xFF	; 255
 234:	0f b6       	in	r0, 0x3f	; 63
 236:	f8 94       	cli
 238:	3e bf       	out	0x3e, r19	; 62
 23a:	0f be       	out	0x3f, r0	; 63
 23c:	2d bf       	out	0x3d, r18	; 61
 23e:	28 1b       	sub	r18, r24
 240:	39 0b       	sbc	r19, r25
 242:	0f b6       	in	r0, 0x3f	; 63
 244:	f8 94       	cli
 246:	3e bf       	out	0x3e, r19	; 62
 248:	0f be       	out	0x3f, r0	; 63
 24a:	2d bf       	out	0x3d, r18	; 61
 24c:	0d b7       	in	r16, 0x3d	; 61
 24e:	1e b7       	in	r17, 0x3e	; 62
 250:	0f 5f       	subi	r16, 0xFF	; 255
 252:	1f 4f       	sbci	r17, 0xFF	; 255
	snprintf(str, length + 1, "%d", number);
 254:	cf 92       	push	r12
 256:	df 92       	push	r13
 258:	ff 92       	push	r15
 25a:	ef 92       	push	r14
 25c:	9f 93       	push	r25
 25e:	8f 93       	push	r24
 260:	1f 93       	push	r17
 262:	0f 93       	push	r16
 264:	9a d0       	rcall	.+308    	; 0x39a <snprintf>
	lcd_write_string(str);
 266:	80 2f       	mov	r24, r16
 268:	91 2f       	mov	r25, r17
 26a:	73 df       	rcall	.-282    	; 0x152 <lcd_write_string>
}
 26c:	8d b7       	in	r24, 0x3d	; 61
 26e:	9e b7       	in	r25, 0x3e	; 62
 270:	08 96       	adiw	r24, 0x08	; 8
 272:	0f b6       	in	r0, 0x3f	; 63
 274:	f8 94       	cli
 276:	9e bf       	out	0x3e, r25	; 62
 278:	0f be       	out	0x3f, r0	; 63
 27a:	8d bf       	out	0x3d, r24	; 61
 27c:	0f b6       	in	r0, 0x3f	; 63
 27e:	f8 94       	cli
 280:	be be       	out	0x3e, r11	; 62
 282:	0f be       	out	0x3f, r0	; 63
 284:	ad be       	out	0x3d, r10	; 61
 286:	df 91       	pop	r29
 288:	cf 91       	pop	r28
 28a:	1f 91       	pop	r17
 28c:	0f 91       	pop	r16
 28e:	ff 90       	pop	r15
 290:	ef 90       	pop	r14
 292:	df 90       	pop	r13
 294:	cf 90       	pop	r12
 296:	bf 90       	pop	r11
 298:	af 90       	pop	r10
 29a:	08 95       	ret

0000029c <OneStep>:
		_delay_ms(100);
    }
}

void OneStep(){
	switch(step_number){
 29c:	e0 91 06 01 	lds	r30, 0x0106	; 0x800106 <__data_end>
 2a0:	f0 91 07 01 	lds	r31, 0x0107	; 0x800107 <__data_end+0x1>
 2a4:	e8 30       	cpi	r30, 0x08	; 8
 2a6:	f1 05       	cpc	r31, r1
 2a8:	d8 f4       	brcc	.+54     	; 0x2e0 <OneStep+0x44>
 2aa:	ea 5b       	subi	r30, 0xBA	; 186
 2ac:	ff 4f       	sbci	r31, 0xFF	; 255
 2ae:	6c c0       	rjmp	.+216    	; 0x388 <__tablejump2__>
		case 0:
		PORTE = 0b00000001;
 2b0:	81 e0       	ldi	r24, 0x01	; 1
 2b2:	83 b9       	out	0x03, r24	; 3
		break;
 2b4:	16 c0       	rjmp	.+44     	; 0x2e2 <OneStep+0x46>
		
		case 1:
		PORTE = 0b00000011;
 2b6:	83 e0       	ldi	r24, 0x03	; 3
 2b8:	83 b9       	out	0x03, r24	; 3
		break;
 2ba:	13 c0       	rjmp	.+38     	; 0x2e2 <OneStep+0x46>
		
		case 2:
		PORTE = 0b00000010;
 2bc:	82 e0       	ldi	r24, 0x02	; 2
 2be:	83 b9       	out	0x03, r24	; 3
		break;
 2c0:	10 c0       	rjmp	.+32     	; 0x2e2 <OneStep+0x46>
		
		case 3:
		PORTE = 0b00000110;
 2c2:	86 e0       	ldi	r24, 0x06	; 6
 2c4:	83 b9       	out	0x03, r24	; 3
		break;
 2c6:	0d c0       	rjmp	.+26     	; 0x2e2 <OneStep+0x46>
		
		case 4:
		PORTE = 0b00000100;
 2c8:	84 e0       	ldi	r24, 0x04	; 4
 2ca:	83 b9       	out	0x03, r24	; 3
		break;
 2cc:	0a c0       	rjmp	.+20     	; 0x2e2 <OneStep+0x46>
		
		case 5:
		PORTE = 0b00001100;
 2ce:	8c e0       	ldi	r24, 0x0C	; 12
 2d0:	83 b9       	out	0x03, r24	; 3
		break;
 2d2:	07 c0       	rjmp	.+14     	; 0x2e2 <OneStep+0x46>
		
		case 6:
		PORTE = 0b00001000;
 2d4:	88 e0       	ldi	r24, 0x08	; 8
 2d6:	83 b9       	out	0x03, r24	; 3
		break;
 2d8:	04 c0       	rjmp	.+8      	; 0x2e2 <OneStep+0x46>
		
		case 7:
		PORTE = 0b00001001;
 2da:	89 e0       	ldi	r24, 0x09	; 9
 2dc:	83 b9       	out	0x03, r24	; 3
		break;
 2de:	01 c0       	rjmp	.+2      	; 0x2e2 <OneStep+0x46>
		
		default:
		PORTE = 0b00000000;
 2e0:	13 b8       	out	0x03, r1	; 3
		break;
	}
		 
	if(dir_stepper_motor == CLOCKWISE){
		step_number++;
 2e2:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <__data_end>
 2e6:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <__data_end+0x1>
 2ea:	01 96       	adiw	r24, 0x01	; 1
 2ec:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <__data_end+0x1>
 2f0:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <__data_end>
	} else{
		step_number--;
	}

	if(step_number > 7){
 2f4:	08 97       	sbiw	r24, 0x08	; 8
 2f6:	24 f0       	brlt	.+8      	; 0x300 <OneStep+0x64>
		step_number = 0;
 2f8:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__data_end+0x1>
 2fc:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <__data_end>
	}
	if(step_number < 0){
 300:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <__data_end>
 304:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <__data_end+0x1>
 308:	99 23       	and	r25, r25
 30a:	34 f4       	brge	.+12     	; 0x318 <OneStep+0x7c>
		step_number = 7;
 30c:	87 e0       	ldi	r24, 0x07	; 7
 30e:	90 e0       	ldi	r25, 0x00	; 0
 310:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <__data_end+0x1>
 314:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <__data_end>
 318:	8f ec       	ldi	r24, 0xCF	; 207
 31a:	97 e0       	ldi	r25, 0x07	; 7
 31c:	01 97       	sbiw	r24, 0x01	; 1
 31e:	f1 f7       	brne	.-4      	; 0x31c <OneStep+0x80>
 320:	00 c0       	rjmp	.+0      	; 0x322 <OneStep+0x86>
 322:	00 00       	nop
 324:	08 95       	ret

00000326 <main>:
void OneStep();


int main(void)
{
	DDRG = 0xFF; // port g all output. pin 0 is trig, the rest is for debug
 326:	8f ef       	ldi	r24, 0xFF	; 255
 328:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
	DDRE = 0xFF;
 32c:	82 b9       	out	0x02, r24	; 2
 32e:	2f e7       	ldi	r18, 0x7F	; 127
 330:	88 e3       	ldi	r24, 0x38	; 56
 332:	91 e0       	ldi	r25, 0x01	; 1
 334:	21 50       	subi	r18, 0x01	; 1
 336:	80 40       	sbci	r24, 0x00	; 0
 338:	90 40       	sbci	r25, 0x00	; 0
 33a:	e1 f7       	brne	.-8      	; 0x334 <main+0xe>
 33c:	00 c0       	rjmp	.+0      	; 0x33e <main+0x18>
 33e:	00 00       	nop
	//
	//sei(); // turn on interrupt system
	
	_delay_ms(50);
	
	init_4bits_mode();
 340:	de de       	rcall	.-580    	; 0xfe <init_4bits_mode>
 342:	8f e1       	ldi	r24, 0x1F	; 31
 344:	9e e4       	ldi	r25, 0x4E	; 78
 346:	01 97       	sbiw	r24, 0x01	; 1
 348:	f1 f7       	brne	.-4      	; 0x346 <main+0x20>
 34a:	00 c0       	rjmp	.+0      	; 0x34c <main+0x26>
	_delay_ms(10);
	lcd_clear();
 34c:	00 00       	nop
 34e:	1d df       	rcall	.-454    	; 0x18a <lcd_clear>
	//stepper motor degree value
	// 360 degree = 4096
	// 180 degree = 2048
	// 90 degree  = 1024
	// 45 degree  = 512
	write_int_lcd(360);
 350:	88 e6       	ldi	r24, 0x68	; 104
 352:	91 e0       	ldi	r25, 0x01	; 1
 354:	4b df       	rcall	.-362    	; 0x1ec <write_int_lcd>
	for(int i = 0; i < 4096; i++){
 356:	c0 e0       	ldi	r28, 0x00	; 0
 358:	d0 e0       	ldi	r29, 0x00	; 0
		OneStep();
 35a:	08 c0       	rjmp	.+16     	; 0x36c <main+0x46>
 35c:	9f df       	rcall	.-194    	; 0x29c <OneStep>
 35e:	8f ec       	ldi	r24, 0xCF	; 207
 360:	97 e0       	ldi	r25, 0x07	; 7
 362:	01 97       	sbiw	r24, 0x01	; 1
 364:	f1 f7       	brne	.-4      	; 0x362 <main+0x3c>
 366:	00 c0       	rjmp	.+0      	; 0x368 <main+0x42>
 368:	00 00       	nop
	// 360 degree = 4096
	// 180 degree = 2048
	// 90 degree  = 1024
	// 45 degree  = 512
	write_int_lcd(360);
	for(int i = 0; i < 4096; i++){
 36a:	21 96       	adiw	r28, 0x01	; 1
 36c:	c1 15       	cp	r28, r1
 36e:	90 e1       	ldi	r25, 0x10	; 16
 370:	d9 07       	cpc	r29, r25
 372:	a4 f3       	brlt	.-24     	; 0x35c <main+0x36>
 374:	2f ef       	ldi	r18, 0xFF	; 255
 376:	80 e7       	ldi	r24, 0x70	; 112
 378:	92 e0       	ldi	r25, 0x02	; 2
 37a:	21 50       	subi	r18, 0x01	; 1
 37c:	80 40       	sbci	r24, 0x00	; 0
 37e:	90 40       	sbci	r25, 0x00	; 0
 380:	e1 f7       	brne	.-8      	; 0x37a <main+0x54>
 382:	00 c0       	rjmp	.+0      	; 0x384 <main+0x5e>
 384:	00 00       	nop
 386:	f6 cf       	rjmp	.-20     	; 0x374 <main+0x4e>

00000388 <__tablejump2__>:
 388:	ee 0f       	add	r30, r30
 38a:	ff 1f       	adc	r31, r31
 38c:	00 24       	eor	r0, r0
 38e:	00 1c       	adc	r0, r0
 390:	0b be       	out	0x3b, r0	; 59
 392:	07 90       	elpm	r0, Z+
 394:	f6 91       	elpm	r31, Z
 396:	e0 2d       	mov	r30, r0
 398:	09 94       	ijmp

0000039a <snprintf>:
 39a:	0f 93       	push	r16
 39c:	1f 93       	push	r17
 39e:	cf 93       	push	r28
 3a0:	df 93       	push	r29
 3a2:	cd b7       	in	r28, 0x3d	; 61
 3a4:	de b7       	in	r29, 0x3e	; 62
 3a6:	2e 97       	sbiw	r28, 0x0e	; 14
 3a8:	0f b6       	in	r0, 0x3f	; 63
 3aa:	f8 94       	cli
 3ac:	de bf       	out	0x3e, r29	; 62
 3ae:	0f be       	out	0x3f, r0	; 63
 3b0:	cd bf       	out	0x3d, r28	; 61
 3b2:	0d 89       	ldd	r16, Y+21	; 0x15
 3b4:	1e 89       	ldd	r17, Y+22	; 0x16
 3b6:	8f 89       	ldd	r24, Y+23	; 0x17
 3b8:	98 8d       	ldd	r25, Y+24	; 0x18
 3ba:	26 e0       	ldi	r18, 0x06	; 6
 3bc:	2c 83       	std	Y+4, r18	; 0x04
 3be:	1a 83       	std	Y+2, r17	; 0x02
 3c0:	09 83       	std	Y+1, r16	; 0x01
 3c2:	97 ff       	sbrs	r25, 7
 3c4:	02 c0       	rjmp	.+4      	; 0x3ca <snprintf+0x30>
 3c6:	80 e0       	ldi	r24, 0x00	; 0
 3c8:	90 e8       	ldi	r25, 0x80	; 128
 3ca:	01 97       	sbiw	r24, 0x01	; 1
 3cc:	9e 83       	std	Y+6, r25	; 0x06
 3ce:	8d 83       	std	Y+5, r24	; 0x05
 3d0:	ae 01       	movw	r20, r28
 3d2:	45 5e       	subi	r20, 0xE5	; 229
 3d4:	5f 4f       	sbci	r21, 0xFF	; 255
 3d6:	69 8d       	ldd	r22, Y+25	; 0x19
 3d8:	7a 8d       	ldd	r23, Y+26	; 0x1a
 3da:	ce 01       	movw	r24, r28
 3dc:	01 96       	adiw	r24, 0x01	; 1
 3de:	19 d0       	rcall	.+50     	; 0x412 <vfprintf>
 3e0:	4d 81       	ldd	r20, Y+5	; 0x05
 3e2:	5e 81       	ldd	r21, Y+6	; 0x06
 3e4:	57 fd       	sbrc	r21, 7
 3e6:	0a c0       	rjmp	.+20     	; 0x3fc <snprintf+0x62>
 3e8:	2f 81       	ldd	r18, Y+7	; 0x07
 3ea:	38 85       	ldd	r19, Y+8	; 0x08
 3ec:	42 17       	cp	r20, r18
 3ee:	53 07       	cpc	r21, r19
 3f0:	0c f4       	brge	.+2      	; 0x3f4 <snprintf+0x5a>
 3f2:	9a 01       	movw	r18, r20
 3f4:	f8 01       	movw	r30, r16
 3f6:	e2 0f       	add	r30, r18
 3f8:	f3 1f       	adc	r31, r19
 3fa:	10 82       	st	Z, r1
 3fc:	2e 96       	adiw	r28, 0x0e	; 14
 3fe:	0f b6       	in	r0, 0x3f	; 63
 400:	f8 94       	cli
 402:	de bf       	out	0x3e, r29	; 62
 404:	0f be       	out	0x3f, r0	; 63
 406:	cd bf       	out	0x3d, r28	; 61
 408:	df 91       	pop	r29
 40a:	cf 91       	pop	r28
 40c:	1f 91       	pop	r17
 40e:	0f 91       	pop	r16
 410:	08 95       	ret

00000412 <vfprintf>:
 412:	2f 92       	push	r2
 414:	3f 92       	push	r3
 416:	4f 92       	push	r4
 418:	5f 92       	push	r5
 41a:	6f 92       	push	r6
 41c:	7f 92       	push	r7
 41e:	8f 92       	push	r8
 420:	9f 92       	push	r9
 422:	af 92       	push	r10
 424:	bf 92       	push	r11
 426:	cf 92       	push	r12
 428:	df 92       	push	r13
 42a:	ef 92       	push	r14
 42c:	ff 92       	push	r15
 42e:	0f 93       	push	r16
 430:	1f 93       	push	r17
 432:	cf 93       	push	r28
 434:	df 93       	push	r29
 436:	cd b7       	in	r28, 0x3d	; 61
 438:	de b7       	in	r29, 0x3e	; 62
 43a:	2b 97       	sbiw	r28, 0x0b	; 11
 43c:	0f b6       	in	r0, 0x3f	; 63
 43e:	f8 94       	cli
 440:	de bf       	out	0x3e, r29	; 62
 442:	0f be       	out	0x3f, r0	; 63
 444:	cd bf       	out	0x3d, r28	; 61
 446:	6c 01       	movw	r12, r24
 448:	7b 01       	movw	r14, r22
 44a:	8a 01       	movw	r16, r20
 44c:	fc 01       	movw	r30, r24
 44e:	17 82       	std	Z+7, r1	; 0x07
 450:	16 82       	std	Z+6, r1	; 0x06
 452:	83 81       	ldd	r24, Z+3	; 0x03
 454:	81 ff       	sbrs	r24, 1
 456:	bf c1       	rjmp	.+894    	; 0x7d6 <vfprintf+0x3c4>
 458:	ce 01       	movw	r24, r28
 45a:	01 96       	adiw	r24, 0x01	; 1
 45c:	3c 01       	movw	r6, r24
 45e:	f6 01       	movw	r30, r12
 460:	93 81       	ldd	r25, Z+3	; 0x03
 462:	f7 01       	movw	r30, r14
 464:	93 fd       	sbrc	r25, 3
 466:	85 91       	lpm	r24, Z+
 468:	93 ff       	sbrs	r25, 3
 46a:	81 91       	ld	r24, Z+
 46c:	7f 01       	movw	r14, r30
 46e:	88 23       	and	r24, r24
 470:	09 f4       	brne	.+2      	; 0x474 <vfprintf+0x62>
 472:	ad c1       	rjmp	.+858    	; 0x7ce <vfprintf+0x3bc>
 474:	85 32       	cpi	r24, 0x25	; 37
 476:	39 f4       	brne	.+14     	; 0x486 <vfprintf+0x74>
 478:	93 fd       	sbrc	r25, 3
 47a:	85 91       	lpm	r24, Z+
 47c:	93 ff       	sbrs	r25, 3
 47e:	81 91       	ld	r24, Z+
 480:	7f 01       	movw	r14, r30
 482:	85 32       	cpi	r24, 0x25	; 37
 484:	21 f4       	brne	.+8      	; 0x48e <vfprintf+0x7c>
 486:	b6 01       	movw	r22, r12
 488:	90 e0       	ldi	r25, 0x00	; 0
 48a:	d6 d1       	rcall	.+940    	; 0x838 <fputc>
 48c:	e8 cf       	rjmp	.-48     	; 0x45e <vfprintf+0x4c>
 48e:	91 2c       	mov	r9, r1
 490:	21 2c       	mov	r2, r1
 492:	31 2c       	mov	r3, r1
 494:	ff e1       	ldi	r31, 0x1F	; 31
 496:	f3 15       	cp	r31, r3
 498:	d8 f0       	brcs	.+54     	; 0x4d0 <vfprintf+0xbe>
 49a:	8b 32       	cpi	r24, 0x2B	; 43
 49c:	79 f0       	breq	.+30     	; 0x4bc <vfprintf+0xaa>
 49e:	38 f4       	brcc	.+14     	; 0x4ae <vfprintf+0x9c>
 4a0:	80 32       	cpi	r24, 0x20	; 32
 4a2:	79 f0       	breq	.+30     	; 0x4c2 <vfprintf+0xb0>
 4a4:	83 32       	cpi	r24, 0x23	; 35
 4a6:	a1 f4       	brne	.+40     	; 0x4d0 <vfprintf+0xbe>
 4a8:	23 2d       	mov	r18, r3
 4aa:	20 61       	ori	r18, 0x10	; 16
 4ac:	1d c0       	rjmp	.+58     	; 0x4e8 <vfprintf+0xd6>
 4ae:	8d 32       	cpi	r24, 0x2D	; 45
 4b0:	61 f0       	breq	.+24     	; 0x4ca <vfprintf+0xb8>
 4b2:	80 33       	cpi	r24, 0x30	; 48
 4b4:	69 f4       	brne	.+26     	; 0x4d0 <vfprintf+0xbe>
 4b6:	23 2d       	mov	r18, r3
 4b8:	21 60       	ori	r18, 0x01	; 1
 4ba:	16 c0       	rjmp	.+44     	; 0x4e8 <vfprintf+0xd6>
 4bc:	83 2d       	mov	r24, r3
 4be:	82 60       	ori	r24, 0x02	; 2
 4c0:	38 2e       	mov	r3, r24
 4c2:	e3 2d       	mov	r30, r3
 4c4:	e4 60       	ori	r30, 0x04	; 4
 4c6:	3e 2e       	mov	r3, r30
 4c8:	2a c0       	rjmp	.+84     	; 0x51e <vfprintf+0x10c>
 4ca:	f3 2d       	mov	r31, r3
 4cc:	f8 60       	ori	r31, 0x08	; 8
 4ce:	1d c0       	rjmp	.+58     	; 0x50a <vfprintf+0xf8>
 4d0:	37 fc       	sbrc	r3, 7
 4d2:	2d c0       	rjmp	.+90     	; 0x52e <vfprintf+0x11c>
 4d4:	20 ed       	ldi	r18, 0xD0	; 208
 4d6:	28 0f       	add	r18, r24
 4d8:	2a 30       	cpi	r18, 0x0A	; 10
 4da:	40 f0       	brcs	.+16     	; 0x4ec <vfprintf+0xda>
 4dc:	8e 32       	cpi	r24, 0x2E	; 46
 4de:	b9 f4       	brne	.+46     	; 0x50e <vfprintf+0xfc>
 4e0:	36 fc       	sbrc	r3, 6
 4e2:	75 c1       	rjmp	.+746    	; 0x7ce <vfprintf+0x3bc>
 4e4:	23 2d       	mov	r18, r3
 4e6:	20 64       	ori	r18, 0x40	; 64
 4e8:	32 2e       	mov	r3, r18
 4ea:	19 c0       	rjmp	.+50     	; 0x51e <vfprintf+0x10c>
 4ec:	36 fe       	sbrs	r3, 6
 4ee:	06 c0       	rjmp	.+12     	; 0x4fc <vfprintf+0xea>
 4f0:	8a e0       	ldi	r24, 0x0A	; 10
 4f2:	98 9e       	mul	r9, r24
 4f4:	20 0d       	add	r18, r0
 4f6:	11 24       	eor	r1, r1
 4f8:	92 2e       	mov	r9, r18
 4fa:	11 c0       	rjmp	.+34     	; 0x51e <vfprintf+0x10c>
 4fc:	ea e0       	ldi	r30, 0x0A	; 10
 4fe:	2e 9e       	mul	r2, r30
 500:	20 0d       	add	r18, r0
 502:	11 24       	eor	r1, r1
 504:	22 2e       	mov	r2, r18
 506:	f3 2d       	mov	r31, r3
 508:	f0 62       	ori	r31, 0x20	; 32
 50a:	3f 2e       	mov	r3, r31
 50c:	08 c0       	rjmp	.+16     	; 0x51e <vfprintf+0x10c>
 50e:	8c 36       	cpi	r24, 0x6C	; 108
 510:	21 f4       	brne	.+8      	; 0x51a <vfprintf+0x108>
 512:	83 2d       	mov	r24, r3
 514:	80 68       	ori	r24, 0x80	; 128
 516:	38 2e       	mov	r3, r24
 518:	02 c0       	rjmp	.+4      	; 0x51e <vfprintf+0x10c>
 51a:	88 36       	cpi	r24, 0x68	; 104
 51c:	41 f4       	brne	.+16     	; 0x52e <vfprintf+0x11c>
 51e:	f7 01       	movw	r30, r14
 520:	93 fd       	sbrc	r25, 3
 522:	85 91       	lpm	r24, Z+
 524:	93 ff       	sbrs	r25, 3
 526:	81 91       	ld	r24, Z+
 528:	7f 01       	movw	r14, r30
 52a:	81 11       	cpse	r24, r1
 52c:	b3 cf       	rjmp	.-154    	; 0x494 <vfprintf+0x82>
 52e:	98 2f       	mov	r25, r24
 530:	9f 7d       	andi	r25, 0xDF	; 223
 532:	95 54       	subi	r25, 0x45	; 69
 534:	93 30       	cpi	r25, 0x03	; 3
 536:	28 f4       	brcc	.+10     	; 0x542 <vfprintf+0x130>
 538:	0c 5f       	subi	r16, 0xFC	; 252
 53a:	1f 4f       	sbci	r17, 0xFF	; 255
 53c:	9f e3       	ldi	r25, 0x3F	; 63
 53e:	99 83       	std	Y+1, r25	; 0x01
 540:	0d c0       	rjmp	.+26     	; 0x55c <vfprintf+0x14a>
 542:	83 36       	cpi	r24, 0x63	; 99
 544:	31 f0       	breq	.+12     	; 0x552 <vfprintf+0x140>
 546:	83 37       	cpi	r24, 0x73	; 115
 548:	71 f0       	breq	.+28     	; 0x566 <vfprintf+0x154>
 54a:	83 35       	cpi	r24, 0x53	; 83
 54c:	09 f0       	breq	.+2      	; 0x550 <vfprintf+0x13e>
 54e:	55 c0       	rjmp	.+170    	; 0x5fa <vfprintf+0x1e8>
 550:	20 c0       	rjmp	.+64     	; 0x592 <vfprintf+0x180>
 552:	f8 01       	movw	r30, r16
 554:	80 81       	ld	r24, Z
 556:	89 83       	std	Y+1, r24	; 0x01
 558:	0e 5f       	subi	r16, 0xFE	; 254
 55a:	1f 4f       	sbci	r17, 0xFF	; 255
 55c:	88 24       	eor	r8, r8
 55e:	83 94       	inc	r8
 560:	91 2c       	mov	r9, r1
 562:	53 01       	movw	r10, r6
 564:	12 c0       	rjmp	.+36     	; 0x58a <vfprintf+0x178>
 566:	28 01       	movw	r4, r16
 568:	f2 e0       	ldi	r31, 0x02	; 2
 56a:	4f 0e       	add	r4, r31
 56c:	51 1c       	adc	r5, r1
 56e:	f8 01       	movw	r30, r16
 570:	a0 80       	ld	r10, Z
 572:	b1 80       	ldd	r11, Z+1	; 0x01
 574:	36 fe       	sbrs	r3, 6
 576:	03 c0       	rjmp	.+6      	; 0x57e <vfprintf+0x16c>
 578:	69 2d       	mov	r22, r9
 57a:	70 e0       	ldi	r23, 0x00	; 0
 57c:	02 c0       	rjmp	.+4      	; 0x582 <vfprintf+0x170>
 57e:	6f ef       	ldi	r22, 0xFF	; 255
 580:	7f ef       	ldi	r23, 0xFF	; 255
 582:	c5 01       	movw	r24, r10
 584:	4e d1       	rcall	.+668    	; 0x822 <strnlen>
 586:	4c 01       	movw	r8, r24
 588:	82 01       	movw	r16, r4
 58a:	f3 2d       	mov	r31, r3
 58c:	ff 77       	andi	r31, 0x7F	; 127
 58e:	3f 2e       	mov	r3, r31
 590:	15 c0       	rjmp	.+42     	; 0x5bc <vfprintf+0x1aa>
 592:	28 01       	movw	r4, r16
 594:	22 e0       	ldi	r18, 0x02	; 2
 596:	42 0e       	add	r4, r18
 598:	51 1c       	adc	r5, r1
 59a:	f8 01       	movw	r30, r16
 59c:	a0 80       	ld	r10, Z
 59e:	b1 80       	ldd	r11, Z+1	; 0x01
 5a0:	36 fe       	sbrs	r3, 6
 5a2:	03 c0       	rjmp	.+6      	; 0x5aa <vfprintf+0x198>
 5a4:	69 2d       	mov	r22, r9
 5a6:	70 e0       	ldi	r23, 0x00	; 0
 5a8:	02 c0       	rjmp	.+4      	; 0x5ae <vfprintf+0x19c>
 5aa:	6f ef       	ldi	r22, 0xFF	; 255
 5ac:	7f ef       	ldi	r23, 0xFF	; 255
 5ae:	c5 01       	movw	r24, r10
 5b0:	2d d1       	rcall	.+602    	; 0x80c <strnlen_P>
 5b2:	4c 01       	movw	r8, r24
 5b4:	f3 2d       	mov	r31, r3
 5b6:	f0 68       	ori	r31, 0x80	; 128
 5b8:	3f 2e       	mov	r3, r31
 5ba:	82 01       	movw	r16, r4
 5bc:	33 fc       	sbrc	r3, 3
 5be:	19 c0       	rjmp	.+50     	; 0x5f2 <vfprintf+0x1e0>
 5c0:	82 2d       	mov	r24, r2
 5c2:	90 e0       	ldi	r25, 0x00	; 0
 5c4:	88 16       	cp	r8, r24
 5c6:	99 06       	cpc	r9, r25
 5c8:	a0 f4       	brcc	.+40     	; 0x5f2 <vfprintf+0x1e0>
 5ca:	b6 01       	movw	r22, r12
 5cc:	80 e2       	ldi	r24, 0x20	; 32
 5ce:	90 e0       	ldi	r25, 0x00	; 0
 5d0:	33 d1       	rcall	.+614    	; 0x838 <fputc>
 5d2:	2a 94       	dec	r2
 5d4:	f5 cf       	rjmp	.-22     	; 0x5c0 <vfprintf+0x1ae>
 5d6:	f5 01       	movw	r30, r10
 5d8:	37 fc       	sbrc	r3, 7
 5da:	85 91       	lpm	r24, Z+
 5dc:	37 fe       	sbrs	r3, 7
 5de:	81 91       	ld	r24, Z+
 5e0:	5f 01       	movw	r10, r30
 5e2:	b6 01       	movw	r22, r12
 5e4:	90 e0       	ldi	r25, 0x00	; 0
 5e6:	28 d1       	rcall	.+592    	; 0x838 <fputc>
 5e8:	21 10       	cpse	r2, r1
 5ea:	2a 94       	dec	r2
 5ec:	21 e0       	ldi	r18, 0x01	; 1
 5ee:	82 1a       	sub	r8, r18
 5f0:	91 08       	sbc	r9, r1
 5f2:	81 14       	cp	r8, r1
 5f4:	91 04       	cpc	r9, r1
 5f6:	79 f7       	brne	.-34     	; 0x5d6 <vfprintf+0x1c4>
 5f8:	e1 c0       	rjmp	.+450    	; 0x7bc <vfprintf+0x3aa>
 5fa:	84 36       	cpi	r24, 0x64	; 100
 5fc:	11 f0       	breq	.+4      	; 0x602 <vfprintf+0x1f0>
 5fe:	89 36       	cpi	r24, 0x69	; 105
 600:	39 f5       	brne	.+78     	; 0x650 <vfprintf+0x23e>
 602:	f8 01       	movw	r30, r16
 604:	37 fe       	sbrs	r3, 7
 606:	07 c0       	rjmp	.+14     	; 0x616 <vfprintf+0x204>
 608:	60 81       	ld	r22, Z
 60a:	71 81       	ldd	r23, Z+1	; 0x01
 60c:	82 81       	ldd	r24, Z+2	; 0x02
 60e:	93 81       	ldd	r25, Z+3	; 0x03
 610:	0c 5f       	subi	r16, 0xFC	; 252
 612:	1f 4f       	sbci	r17, 0xFF	; 255
 614:	08 c0       	rjmp	.+16     	; 0x626 <vfprintf+0x214>
 616:	60 81       	ld	r22, Z
 618:	71 81       	ldd	r23, Z+1	; 0x01
 61a:	07 2e       	mov	r0, r23
 61c:	00 0c       	add	r0, r0
 61e:	88 0b       	sbc	r24, r24
 620:	99 0b       	sbc	r25, r25
 622:	0e 5f       	subi	r16, 0xFE	; 254
 624:	1f 4f       	sbci	r17, 0xFF	; 255
 626:	f3 2d       	mov	r31, r3
 628:	ff 76       	andi	r31, 0x6F	; 111
 62a:	3f 2e       	mov	r3, r31
 62c:	97 ff       	sbrs	r25, 7
 62e:	09 c0       	rjmp	.+18     	; 0x642 <vfprintf+0x230>
 630:	90 95       	com	r25
 632:	80 95       	com	r24
 634:	70 95       	com	r23
 636:	61 95       	neg	r22
 638:	7f 4f       	sbci	r23, 0xFF	; 255
 63a:	8f 4f       	sbci	r24, 0xFF	; 255
 63c:	9f 4f       	sbci	r25, 0xFF	; 255
 63e:	f0 68       	ori	r31, 0x80	; 128
 640:	3f 2e       	mov	r3, r31
 642:	2a e0       	ldi	r18, 0x0A	; 10
 644:	30 e0       	ldi	r19, 0x00	; 0
 646:	a3 01       	movw	r20, r6
 648:	33 d1       	rcall	.+614    	; 0x8b0 <__ultoa_invert>
 64a:	88 2e       	mov	r8, r24
 64c:	86 18       	sub	r8, r6
 64e:	44 c0       	rjmp	.+136    	; 0x6d8 <vfprintf+0x2c6>
 650:	85 37       	cpi	r24, 0x75	; 117
 652:	31 f4       	brne	.+12     	; 0x660 <vfprintf+0x24e>
 654:	23 2d       	mov	r18, r3
 656:	2f 7e       	andi	r18, 0xEF	; 239
 658:	b2 2e       	mov	r11, r18
 65a:	2a e0       	ldi	r18, 0x0A	; 10
 65c:	30 e0       	ldi	r19, 0x00	; 0
 65e:	25 c0       	rjmp	.+74     	; 0x6aa <vfprintf+0x298>
 660:	93 2d       	mov	r25, r3
 662:	99 7f       	andi	r25, 0xF9	; 249
 664:	b9 2e       	mov	r11, r25
 666:	8f 36       	cpi	r24, 0x6F	; 111
 668:	c1 f0       	breq	.+48     	; 0x69a <vfprintf+0x288>
 66a:	18 f4       	brcc	.+6      	; 0x672 <vfprintf+0x260>
 66c:	88 35       	cpi	r24, 0x58	; 88
 66e:	79 f0       	breq	.+30     	; 0x68e <vfprintf+0x27c>
 670:	ae c0       	rjmp	.+348    	; 0x7ce <vfprintf+0x3bc>
 672:	80 37       	cpi	r24, 0x70	; 112
 674:	19 f0       	breq	.+6      	; 0x67c <vfprintf+0x26a>
 676:	88 37       	cpi	r24, 0x78	; 120
 678:	21 f0       	breq	.+8      	; 0x682 <vfprintf+0x270>
 67a:	a9 c0       	rjmp	.+338    	; 0x7ce <vfprintf+0x3bc>
 67c:	e9 2f       	mov	r30, r25
 67e:	e0 61       	ori	r30, 0x10	; 16
 680:	be 2e       	mov	r11, r30
 682:	b4 fe       	sbrs	r11, 4
 684:	0d c0       	rjmp	.+26     	; 0x6a0 <vfprintf+0x28e>
 686:	fb 2d       	mov	r31, r11
 688:	f4 60       	ori	r31, 0x04	; 4
 68a:	bf 2e       	mov	r11, r31
 68c:	09 c0       	rjmp	.+18     	; 0x6a0 <vfprintf+0x28e>
 68e:	34 fe       	sbrs	r3, 4
 690:	0a c0       	rjmp	.+20     	; 0x6a6 <vfprintf+0x294>
 692:	29 2f       	mov	r18, r25
 694:	26 60       	ori	r18, 0x06	; 6
 696:	b2 2e       	mov	r11, r18
 698:	06 c0       	rjmp	.+12     	; 0x6a6 <vfprintf+0x294>
 69a:	28 e0       	ldi	r18, 0x08	; 8
 69c:	30 e0       	ldi	r19, 0x00	; 0
 69e:	05 c0       	rjmp	.+10     	; 0x6aa <vfprintf+0x298>
 6a0:	20 e1       	ldi	r18, 0x10	; 16
 6a2:	30 e0       	ldi	r19, 0x00	; 0
 6a4:	02 c0       	rjmp	.+4      	; 0x6aa <vfprintf+0x298>
 6a6:	20 e1       	ldi	r18, 0x10	; 16
 6a8:	32 e0       	ldi	r19, 0x02	; 2
 6aa:	f8 01       	movw	r30, r16
 6ac:	b7 fe       	sbrs	r11, 7
 6ae:	07 c0       	rjmp	.+14     	; 0x6be <vfprintf+0x2ac>
 6b0:	60 81       	ld	r22, Z
 6b2:	71 81       	ldd	r23, Z+1	; 0x01
 6b4:	82 81       	ldd	r24, Z+2	; 0x02
 6b6:	93 81       	ldd	r25, Z+3	; 0x03
 6b8:	0c 5f       	subi	r16, 0xFC	; 252
 6ba:	1f 4f       	sbci	r17, 0xFF	; 255
 6bc:	06 c0       	rjmp	.+12     	; 0x6ca <vfprintf+0x2b8>
 6be:	60 81       	ld	r22, Z
 6c0:	71 81       	ldd	r23, Z+1	; 0x01
 6c2:	80 e0       	ldi	r24, 0x00	; 0
 6c4:	90 e0       	ldi	r25, 0x00	; 0
 6c6:	0e 5f       	subi	r16, 0xFE	; 254
 6c8:	1f 4f       	sbci	r17, 0xFF	; 255
 6ca:	a3 01       	movw	r20, r6
 6cc:	f1 d0       	rcall	.+482    	; 0x8b0 <__ultoa_invert>
 6ce:	88 2e       	mov	r8, r24
 6d0:	86 18       	sub	r8, r6
 6d2:	fb 2d       	mov	r31, r11
 6d4:	ff 77       	andi	r31, 0x7F	; 127
 6d6:	3f 2e       	mov	r3, r31
 6d8:	36 fe       	sbrs	r3, 6
 6da:	0d c0       	rjmp	.+26     	; 0x6f6 <vfprintf+0x2e4>
 6dc:	23 2d       	mov	r18, r3
 6de:	2e 7f       	andi	r18, 0xFE	; 254
 6e0:	a2 2e       	mov	r10, r18
 6e2:	89 14       	cp	r8, r9
 6e4:	58 f4       	brcc	.+22     	; 0x6fc <vfprintf+0x2ea>
 6e6:	34 fe       	sbrs	r3, 4
 6e8:	0b c0       	rjmp	.+22     	; 0x700 <vfprintf+0x2ee>
 6ea:	32 fc       	sbrc	r3, 2
 6ec:	09 c0       	rjmp	.+18     	; 0x700 <vfprintf+0x2ee>
 6ee:	83 2d       	mov	r24, r3
 6f0:	8e 7e       	andi	r24, 0xEE	; 238
 6f2:	a8 2e       	mov	r10, r24
 6f4:	05 c0       	rjmp	.+10     	; 0x700 <vfprintf+0x2ee>
 6f6:	b8 2c       	mov	r11, r8
 6f8:	a3 2c       	mov	r10, r3
 6fa:	03 c0       	rjmp	.+6      	; 0x702 <vfprintf+0x2f0>
 6fc:	b8 2c       	mov	r11, r8
 6fe:	01 c0       	rjmp	.+2      	; 0x702 <vfprintf+0x2f0>
 700:	b9 2c       	mov	r11, r9
 702:	a4 fe       	sbrs	r10, 4
 704:	0f c0       	rjmp	.+30     	; 0x724 <vfprintf+0x312>
 706:	fe 01       	movw	r30, r28
 708:	e8 0d       	add	r30, r8
 70a:	f1 1d       	adc	r31, r1
 70c:	80 81       	ld	r24, Z
 70e:	80 33       	cpi	r24, 0x30	; 48
 710:	21 f4       	brne	.+8      	; 0x71a <vfprintf+0x308>
 712:	9a 2d       	mov	r25, r10
 714:	99 7e       	andi	r25, 0xE9	; 233
 716:	a9 2e       	mov	r10, r25
 718:	09 c0       	rjmp	.+18     	; 0x72c <vfprintf+0x31a>
 71a:	a2 fe       	sbrs	r10, 2
 71c:	06 c0       	rjmp	.+12     	; 0x72a <vfprintf+0x318>
 71e:	b3 94       	inc	r11
 720:	b3 94       	inc	r11
 722:	04 c0       	rjmp	.+8      	; 0x72c <vfprintf+0x31a>
 724:	8a 2d       	mov	r24, r10
 726:	86 78       	andi	r24, 0x86	; 134
 728:	09 f0       	breq	.+2      	; 0x72c <vfprintf+0x31a>
 72a:	b3 94       	inc	r11
 72c:	a3 fc       	sbrc	r10, 3
 72e:	10 c0       	rjmp	.+32     	; 0x750 <vfprintf+0x33e>
 730:	a0 fe       	sbrs	r10, 0
 732:	06 c0       	rjmp	.+12     	; 0x740 <vfprintf+0x32e>
 734:	b2 14       	cp	r11, r2
 736:	80 f4       	brcc	.+32     	; 0x758 <vfprintf+0x346>
 738:	28 0c       	add	r2, r8
 73a:	92 2c       	mov	r9, r2
 73c:	9b 18       	sub	r9, r11
 73e:	0d c0       	rjmp	.+26     	; 0x75a <vfprintf+0x348>
 740:	b2 14       	cp	r11, r2
 742:	58 f4       	brcc	.+22     	; 0x75a <vfprintf+0x348>
 744:	b6 01       	movw	r22, r12
 746:	80 e2       	ldi	r24, 0x20	; 32
 748:	90 e0       	ldi	r25, 0x00	; 0
 74a:	76 d0       	rcall	.+236    	; 0x838 <fputc>
 74c:	b3 94       	inc	r11
 74e:	f8 cf       	rjmp	.-16     	; 0x740 <vfprintf+0x32e>
 750:	b2 14       	cp	r11, r2
 752:	18 f4       	brcc	.+6      	; 0x75a <vfprintf+0x348>
 754:	2b 18       	sub	r2, r11
 756:	02 c0       	rjmp	.+4      	; 0x75c <vfprintf+0x34a>
 758:	98 2c       	mov	r9, r8
 75a:	21 2c       	mov	r2, r1
 75c:	a4 fe       	sbrs	r10, 4
 75e:	0f c0       	rjmp	.+30     	; 0x77e <vfprintf+0x36c>
 760:	b6 01       	movw	r22, r12
 762:	80 e3       	ldi	r24, 0x30	; 48
 764:	90 e0       	ldi	r25, 0x00	; 0
 766:	68 d0       	rcall	.+208    	; 0x838 <fputc>
 768:	a2 fe       	sbrs	r10, 2
 76a:	16 c0       	rjmp	.+44     	; 0x798 <vfprintf+0x386>
 76c:	a1 fc       	sbrc	r10, 1
 76e:	03 c0       	rjmp	.+6      	; 0x776 <vfprintf+0x364>
 770:	88 e7       	ldi	r24, 0x78	; 120
 772:	90 e0       	ldi	r25, 0x00	; 0
 774:	02 c0       	rjmp	.+4      	; 0x77a <vfprintf+0x368>
 776:	88 e5       	ldi	r24, 0x58	; 88
 778:	90 e0       	ldi	r25, 0x00	; 0
 77a:	b6 01       	movw	r22, r12
 77c:	0c c0       	rjmp	.+24     	; 0x796 <vfprintf+0x384>
 77e:	8a 2d       	mov	r24, r10
 780:	86 78       	andi	r24, 0x86	; 134
 782:	51 f0       	breq	.+20     	; 0x798 <vfprintf+0x386>
 784:	a1 fe       	sbrs	r10, 1
 786:	02 c0       	rjmp	.+4      	; 0x78c <vfprintf+0x37a>
 788:	8b e2       	ldi	r24, 0x2B	; 43
 78a:	01 c0       	rjmp	.+2      	; 0x78e <vfprintf+0x37c>
 78c:	80 e2       	ldi	r24, 0x20	; 32
 78e:	a7 fc       	sbrc	r10, 7
 790:	8d e2       	ldi	r24, 0x2D	; 45
 792:	b6 01       	movw	r22, r12
 794:	90 e0       	ldi	r25, 0x00	; 0
 796:	50 d0       	rcall	.+160    	; 0x838 <fputc>
 798:	89 14       	cp	r8, r9
 79a:	30 f4       	brcc	.+12     	; 0x7a8 <vfprintf+0x396>
 79c:	b6 01       	movw	r22, r12
 79e:	80 e3       	ldi	r24, 0x30	; 48
 7a0:	90 e0       	ldi	r25, 0x00	; 0
 7a2:	4a d0       	rcall	.+148    	; 0x838 <fputc>
 7a4:	9a 94       	dec	r9
 7a6:	f8 cf       	rjmp	.-16     	; 0x798 <vfprintf+0x386>
 7a8:	8a 94       	dec	r8
 7aa:	f3 01       	movw	r30, r6
 7ac:	e8 0d       	add	r30, r8
 7ae:	f1 1d       	adc	r31, r1
 7b0:	80 81       	ld	r24, Z
 7b2:	b6 01       	movw	r22, r12
 7b4:	90 e0       	ldi	r25, 0x00	; 0
 7b6:	40 d0       	rcall	.+128    	; 0x838 <fputc>
 7b8:	81 10       	cpse	r8, r1
 7ba:	f6 cf       	rjmp	.-20     	; 0x7a8 <vfprintf+0x396>
 7bc:	22 20       	and	r2, r2
 7be:	09 f4       	brne	.+2      	; 0x7c2 <vfprintf+0x3b0>
 7c0:	4e ce       	rjmp	.-868    	; 0x45e <vfprintf+0x4c>
 7c2:	b6 01       	movw	r22, r12
 7c4:	80 e2       	ldi	r24, 0x20	; 32
 7c6:	90 e0       	ldi	r25, 0x00	; 0
 7c8:	37 d0       	rcall	.+110    	; 0x838 <fputc>
 7ca:	2a 94       	dec	r2
 7cc:	f7 cf       	rjmp	.-18     	; 0x7bc <vfprintf+0x3aa>
 7ce:	f6 01       	movw	r30, r12
 7d0:	86 81       	ldd	r24, Z+6	; 0x06
 7d2:	97 81       	ldd	r25, Z+7	; 0x07
 7d4:	02 c0       	rjmp	.+4      	; 0x7da <vfprintf+0x3c8>
 7d6:	8f ef       	ldi	r24, 0xFF	; 255
 7d8:	9f ef       	ldi	r25, 0xFF	; 255
 7da:	2b 96       	adiw	r28, 0x0b	; 11
 7dc:	0f b6       	in	r0, 0x3f	; 63
 7de:	f8 94       	cli
 7e0:	de bf       	out	0x3e, r29	; 62
 7e2:	0f be       	out	0x3f, r0	; 63
 7e4:	cd bf       	out	0x3d, r28	; 61
 7e6:	df 91       	pop	r29
 7e8:	cf 91       	pop	r28
 7ea:	1f 91       	pop	r17
 7ec:	0f 91       	pop	r16
 7ee:	ff 90       	pop	r15
 7f0:	ef 90       	pop	r14
 7f2:	df 90       	pop	r13
 7f4:	cf 90       	pop	r12
 7f6:	bf 90       	pop	r11
 7f8:	af 90       	pop	r10
 7fa:	9f 90       	pop	r9
 7fc:	8f 90       	pop	r8
 7fe:	7f 90       	pop	r7
 800:	6f 90       	pop	r6
 802:	5f 90       	pop	r5
 804:	4f 90       	pop	r4
 806:	3f 90       	pop	r3
 808:	2f 90       	pop	r2
 80a:	08 95       	ret

0000080c <strnlen_P>:
 80c:	fc 01       	movw	r30, r24
 80e:	05 90       	lpm	r0, Z+
 810:	61 50       	subi	r22, 0x01	; 1
 812:	70 40       	sbci	r23, 0x00	; 0
 814:	01 10       	cpse	r0, r1
 816:	d8 f7       	brcc	.-10     	; 0x80e <strnlen_P+0x2>
 818:	80 95       	com	r24
 81a:	90 95       	com	r25
 81c:	8e 0f       	add	r24, r30
 81e:	9f 1f       	adc	r25, r31
 820:	08 95       	ret

00000822 <strnlen>:
 822:	fc 01       	movw	r30, r24
 824:	61 50       	subi	r22, 0x01	; 1
 826:	70 40       	sbci	r23, 0x00	; 0
 828:	01 90       	ld	r0, Z+
 82a:	01 10       	cpse	r0, r1
 82c:	d8 f7       	brcc	.-10     	; 0x824 <strnlen+0x2>
 82e:	80 95       	com	r24
 830:	90 95       	com	r25
 832:	8e 0f       	add	r24, r30
 834:	9f 1f       	adc	r25, r31
 836:	08 95       	ret

00000838 <fputc>:
 838:	0f 93       	push	r16
 83a:	1f 93       	push	r17
 83c:	cf 93       	push	r28
 83e:	df 93       	push	r29
 840:	fb 01       	movw	r30, r22
 842:	23 81       	ldd	r18, Z+3	; 0x03
 844:	21 fd       	sbrc	r18, 1
 846:	03 c0       	rjmp	.+6      	; 0x84e <fputc+0x16>
 848:	8f ef       	ldi	r24, 0xFF	; 255
 84a:	9f ef       	ldi	r25, 0xFF	; 255
 84c:	2c c0       	rjmp	.+88     	; 0x8a6 <fputc+0x6e>
 84e:	22 ff       	sbrs	r18, 2
 850:	16 c0       	rjmp	.+44     	; 0x87e <fputc+0x46>
 852:	46 81       	ldd	r20, Z+6	; 0x06
 854:	57 81       	ldd	r21, Z+7	; 0x07
 856:	24 81       	ldd	r18, Z+4	; 0x04
 858:	35 81       	ldd	r19, Z+5	; 0x05
 85a:	42 17       	cp	r20, r18
 85c:	53 07       	cpc	r21, r19
 85e:	44 f4       	brge	.+16     	; 0x870 <fputc+0x38>
 860:	a0 81       	ld	r26, Z
 862:	b1 81       	ldd	r27, Z+1	; 0x01
 864:	9d 01       	movw	r18, r26
 866:	2f 5f       	subi	r18, 0xFF	; 255
 868:	3f 4f       	sbci	r19, 0xFF	; 255
 86a:	31 83       	std	Z+1, r19	; 0x01
 86c:	20 83       	st	Z, r18
 86e:	8c 93       	st	X, r24
 870:	26 81       	ldd	r18, Z+6	; 0x06
 872:	37 81       	ldd	r19, Z+7	; 0x07
 874:	2f 5f       	subi	r18, 0xFF	; 255
 876:	3f 4f       	sbci	r19, 0xFF	; 255
 878:	37 83       	std	Z+7, r19	; 0x07
 87a:	26 83       	std	Z+6, r18	; 0x06
 87c:	14 c0       	rjmp	.+40     	; 0x8a6 <fputc+0x6e>
 87e:	8b 01       	movw	r16, r22
 880:	ec 01       	movw	r28, r24
 882:	fb 01       	movw	r30, r22
 884:	00 84       	ldd	r0, Z+8	; 0x08
 886:	f1 85       	ldd	r31, Z+9	; 0x09
 888:	e0 2d       	mov	r30, r0
 88a:	09 95       	icall
 88c:	89 2b       	or	r24, r25
 88e:	e1 f6       	brne	.-72     	; 0x848 <fputc+0x10>
 890:	d8 01       	movw	r26, r16
 892:	16 96       	adiw	r26, 0x06	; 6
 894:	8d 91       	ld	r24, X+
 896:	9c 91       	ld	r25, X
 898:	17 97       	sbiw	r26, 0x07	; 7
 89a:	01 96       	adiw	r24, 0x01	; 1
 89c:	17 96       	adiw	r26, 0x07	; 7
 89e:	9c 93       	st	X, r25
 8a0:	8e 93       	st	-X, r24
 8a2:	16 97       	sbiw	r26, 0x06	; 6
 8a4:	ce 01       	movw	r24, r28
 8a6:	df 91       	pop	r29
 8a8:	cf 91       	pop	r28
 8aa:	1f 91       	pop	r17
 8ac:	0f 91       	pop	r16
 8ae:	08 95       	ret

000008b0 <__ultoa_invert>:
 8b0:	fa 01       	movw	r30, r20
 8b2:	aa 27       	eor	r26, r26
 8b4:	28 30       	cpi	r18, 0x08	; 8
 8b6:	51 f1       	breq	.+84     	; 0x90c <__ultoa_invert+0x5c>
 8b8:	20 31       	cpi	r18, 0x10	; 16
 8ba:	81 f1       	breq	.+96     	; 0x91c <__ultoa_invert+0x6c>
 8bc:	e8 94       	clt
 8be:	6f 93       	push	r22
 8c0:	6e 7f       	andi	r22, 0xFE	; 254
 8c2:	6e 5f       	subi	r22, 0xFE	; 254
 8c4:	7f 4f       	sbci	r23, 0xFF	; 255
 8c6:	8f 4f       	sbci	r24, 0xFF	; 255
 8c8:	9f 4f       	sbci	r25, 0xFF	; 255
 8ca:	af 4f       	sbci	r26, 0xFF	; 255
 8cc:	b1 e0       	ldi	r27, 0x01	; 1
 8ce:	3e d0       	rcall	.+124    	; 0x94c <__ultoa_invert+0x9c>
 8d0:	b4 e0       	ldi	r27, 0x04	; 4
 8d2:	3c d0       	rcall	.+120    	; 0x94c <__ultoa_invert+0x9c>
 8d4:	67 0f       	add	r22, r23
 8d6:	78 1f       	adc	r23, r24
 8d8:	89 1f       	adc	r24, r25
 8da:	9a 1f       	adc	r25, r26
 8dc:	a1 1d       	adc	r26, r1
 8de:	68 0f       	add	r22, r24
 8e0:	79 1f       	adc	r23, r25
 8e2:	8a 1f       	adc	r24, r26
 8e4:	91 1d       	adc	r25, r1
 8e6:	a1 1d       	adc	r26, r1
 8e8:	6a 0f       	add	r22, r26
 8ea:	71 1d       	adc	r23, r1
 8ec:	81 1d       	adc	r24, r1
 8ee:	91 1d       	adc	r25, r1
 8f0:	a1 1d       	adc	r26, r1
 8f2:	20 d0       	rcall	.+64     	; 0x934 <__ultoa_invert+0x84>
 8f4:	09 f4       	brne	.+2      	; 0x8f8 <__ultoa_invert+0x48>
 8f6:	68 94       	set
 8f8:	3f 91       	pop	r19
 8fa:	2a e0       	ldi	r18, 0x0A	; 10
 8fc:	26 9f       	mul	r18, r22
 8fe:	11 24       	eor	r1, r1
 900:	30 19       	sub	r19, r0
 902:	30 5d       	subi	r19, 0xD0	; 208
 904:	31 93       	st	Z+, r19
 906:	de f6       	brtc	.-74     	; 0x8be <__ultoa_invert+0xe>
 908:	cf 01       	movw	r24, r30
 90a:	08 95       	ret
 90c:	46 2f       	mov	r20, r22
 90e:	47 70       	andi	r20, 0x07	; 7
 910:	40 5d       	subi	r20, 0xD0	; 208
 912:	41 93       	st	Z+, r20
 914:	b3 e0       	ldi	r27, 0x03	; 3
 916:	0f d0       	rcall	.+30     	; 0x936 <__ultoa_invert+0x86>
 918:	c9 f7       	brne	.-14     	; 0x90c <__ultoa_invert+0x5c>
 91a:	f6 cf       	rjmp	.-20     	; 0x908 <__ultoa_invert+0x58>
 91c:	46 2f       	mov	r20, r22
 91e:	4f 70       	andi	r20, 0x0F	; 15
 920:	40 5d       	subi	r20, 0xD0	; 208
 922:	4a 33       	cpi	r20, 0x3A	; 58
 924:	18 f0       	brcs	.+6      	; 0x92c <__ultoa_invert+0x7c>
 926:	49 5d       	subi	r20, 0xD9	; 217
 928:	31 fd       	sbrc	r19, 1
 92a:	40 52       	subi	r20, 0x20	; 32
 92c:	41 93       	st	Z+, r20
 92e:	02 d0       	rcall	.+4      	; 0x934 <__ultoa_invert+0x84>
 930:	a9 f7       	brne	.-22     	; 0x91c <__ultoa_invert+0x6c>
 932:	ea cf       	rjmp	.-44     	; 0x908 <__ultoa_invert+0x58>
 934:	b4 e0       	ldi	r27, 0x04	; 4
 936:	a6 95       	lsr	r26
 938:	97 95       	ror	r25
 93a:	87 95       	ror	r24
 93c:	77 95       	ror	r23
 93e:	67 95       	ror	r22
 940:	ba 95       	dec	r27
 942:	c9 f7       	brne	.-14     	; 0x936 <__ultoa_invert+0x86>
 944:	00 97       	sbiw	r24, 0x00	; 0
 946:	61 05       	cpc	r22, r1
 948:	71 05       	cpc	r23, r1
 94a:	08 95       	ret
 94c:	9b 01       	movw	r18, r22
 94e:	ac 01       	movw	r20, r24
 950:	0a 2e       	mov	r0, r26
 952:	06 94       	lsr	r0
 954:	57 95       	ror	r21
 956:	47 95       	ror	r20
 958:	37 95       	ror	r19
 95a:	27 95       	ror	r18
 95c:	ba 95       	dec	r27
 95e:	c9 f7       	brne	.-14     	; 0x952 <__ultoa_invert+0xa2>
 960:	62 0f       	add	r22, r18
 962:	73 1f       	adc	r23, r19
 964:	84 1f       	adc	r24, r20
 966:	95 1f       	adc	r25, r21
 968:	a0 1d       	adc	r26, r0
 96a:	08 95       	ret

0000096c <_exit>:
 96c:	f8 94       	cli

0000096e <__stop_program>:
 96e:	ff cf       	rjmp	.-2      	; 0x96e <__stop_program>
