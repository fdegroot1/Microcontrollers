
Opdracht 1.B.7a.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000007c  00800100  0000021a  000002ae  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000021a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000007  0080017c  0080017c  0000032a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000032a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000035c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000058  00000000  00000000  00000398  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b35  00000000  00000000  000003f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000090b  00000000  00000000  00000f25  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000037f  00000000  00000000  00001830  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000a0  00000000  00000000  00001bb0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004cf  00000000  00000000  00001c50  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000c5  00000000  00000000  0000211f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000048  00000000  00000000  000021e4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ea e1       	ldi	r30, 0x1A	; 26
  a0:	f2 e0       	ldi	r31, 0x02	; 2
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	ac 37       	cpi	r26, 0x7C	; 124
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	ac e7       	ldi	r26, 0x7C	; 124
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a3 38       	cpi	r26, 0x83	; 131
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	70 d0       	rcall	.+224    	; 0x1a4 <main>
  c4:	a8 c0       	rjmp	.+336    	; 0x216 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <s1>:
{
	for (int i=0; i<ms; i++)
	{
		_delay_ms( 1 );		// library function (max 30 ms at 8MHz)
	}
}
  c8:	89 e6       	ldi	r24, 0x69	; 105
  ca:	91 e0       	ldi	r25, 0x01	; 1
  cc:	74 c0       	rjmp	.+232    	; 0x1b6 <puts>
  ce:	08 95       	ret

000000d0 <s2>:
  d0:	8c e6       	ldi	r24, 0x6C	; 108
  d2:	91 e0       	ldi	r25, 0x01	; 1
  d4:	70 c0       	rjmp	.+224    	; 0x1b6 <puts>
  d6:	08 95       	ret

000000d8 <s3>:
  d8:	8f e6       	ldi	r24, 0x6F	; 111
  da:	91 e0       	ldi	r25, 0x01	; 1
  dc:	6c c0       	rjmp	.+216    	; 0x1b6 <puts>
  de:	08 95       	ret

000000e0 <start>:
  e0:	82 e7       	ldi	r24, 0x72	; 114
  e2:	91 e0       	ldi	r25, 0x01	; 1
  e4:	68 c0       	rjmp	.+208    	; 0x1b6 <puts>
  e6:	08 95       	ret

000000e8 <end>:
  e8:	88 e7       	ldi	r24, 0x78	; 120
  ea:	91 e0       	ldi	r25, 0x01	; 1
  ec:	64 c0       	rjmp	.+200    	; 0x1b6 <puts>
  ee:	08 95       	ret

000000f0 <handleEvent>:
  f0:	cf 93       	push	r28
  f2:	df 93       	push	r29
  f4:	c8 2f       	mov	r28, r24
  f6:	d0 e0       	ldi	r29, 0x00	; 0
  f8:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <__data_end>
  fc:	fe 01       	movw	r30, r28
  fe:	ee 0f       	add	r30, r30
 100:	ff 1f       	adc	r31, r31
 102:	ee 0f       	add	r30, r30
 104:	ff 1f       	adc	r31, r31
 106:	ee 0f       	add	r30, r30
 108:	ff 1f       	adc	r31, r31
 10a:	ec 1b       	sub	r30, r28
 10c:	fd 0b       	sbc	r31, r29
 10e:	95 e1       	ldi	r25, 0x15	; 21
 110:	89 9f       	mul	r24, r25
 112:	e0 0d       	add	r30, r0
 114:	f1 1d       	adc	r31, r1
 116:	11 24       	eor	r1, r1
 118:	e0 50       	subi	r30, 0x00	; 0
 11a:	ff 4f       	sbci	r31, 0xFF	; 255
 11c:	04 80       	ldd	r0, Z+4	; 0x04
 11e:	f5 81       	ldd	r31, Z+5	; 0x05
 120:	e0 2d       	mov	r30, r0
 122:	30 97       	sbiw	r30, 0x00	; 0
 124:	09 f0       	breq	.+2      	; 0x128 <handleEvent+0x38>
 126:	09 95       	icall
 128:	20 91 7c 01 	lds	r18, 0x017C	; 0x80017c <__data_end>
 12c:	ce 01       	movw	r24, r28
 12e:	88 0f       	add	r24, r24
 130:	99 1f       	adc	r25, r25
 132:	88 0f       	add	r24, r24
 134:	99 1f       	adc	r25, r25
 136:	88 0f       	add	r24, r24
 138:	99 1f       	adc	r25, r25
 13a:	8c 1b       	sub	r24, r28
 13c:	9d 0b       	sbc	r25, r29
 13e:	35 e1       	ldi	r19, 0x15	; 21
 140:	fc 01       	movw	r30, r24
 142:	32 9f       	mul	r19, r18
 144:	e0 0d       	add	r30, r0
 146:	f1 1d       	adc	r31, r1
 148:	11 24       	eor	r1, r1
 14a:	e0 50       	subi	r30, 0x00	; 0
 14c:	ff 4f       	sbci	r31, 0xFF	; 255
 14e:	26 81       	ldd	r18, Z+6	; 0x06
 150:	20 93 7c 01 	sts	0x017C, r18	; 0x80017c <__data_end>
 154:	32 9f       	mul	r19, r18
 156:	80 0d       	add	r24, r0
 158:	91 1d       	adc	r25, r1
 15a:	11 24       	eor	r1, r1
 15c:	fc 01       	movw	r30, r24
 15e:	e0 50       	subi	r30, 0x00	; 0
 160:	ff 4f       	sbci	r31, 0xFF	; 255
 162:	01 90       	ld	r0, Z+
 164:	f0 81       	ld	r31, Z
 166:	e0 2d       	mov	r30, r0
 168:	30 97       	sbiw	r30, 0x00	; 0
 16a:	09 f0       	breq	.+2      	; 0x16e <handleEvent+0x7e>
 16c:	09 95       	icall
 16e:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <__data_end>
 172:	fe 01       	movw	r30, r28
 174:	ee 0f       	add	r30, r30
 176:	ff 1f       	adc	r31, r31
 178:	ee 0f       	add	r30, r30
 17a:	ff 1f       	adc	r31, r31
 17c:	ee 0f       	add	r30, r30
 17e:	ff 1f       	adc	r31, r31
 180:	ec 1b       	sub	r30, r28
 182:	fd 0b       	sbc	r31, r29
 184:	95 e1       	ldi	r25, 0x15	; 21
 186:	89 9f       	mul	r24, r25
 188:	e0 0d       	add	r30, r0
 18a:	f1 1d       	adc	r31, r1
 18c:	11 24       	eor	r1, r1
 18e:	e0 50       	subi	r30, 0x00	; 0
 190:	ff 4f       	sbci	r31, 0xFF	; 255
 192:	02 80       	ldd	r0, Z+2	; 0x02
 194:	f3 81       	ldd	r31, Z+3	; 0x03
 196:	e0 2d       	mov	r30, r0
 198:	30 97       	sbiw	r30, 0x00	; 0
 19a:	09 f0       	breq	.+2      	; 0x19e <handleEvent+0xae>
 19c:	09 95       	icall
 19e:	df 91       	pop	r29
 1a0:	cf 91       	pop	r28
 1a2:	08 95       	ret

000001a4 <main>:
notes:			Looping forever, executing FSM
Version :    	DMK, Initial code
*******************************************************************/
{
	
	DDRD = 0b00001111;			// Pins PORTD<7:4> input, PORTD<3:0) 
 1a4:	8f e0       	ldi	r24, 0x0F	; 15
 1a6:	81 bb       	out	0x11, r24	; 17
								// output 
	
	// Test
	handleEvent(D6);
 1a8:	81 e0       	ldi	r24, 0x01	; 1
 1aa:	a2 df       	rcall	.-188    	; 0xf0 <handleEvent>
	handleEvent(D5);
 1ac:	82 e0       	ldi	r24, 0x02	; 2
 1ae:	a0 df       	rcall	.-192    	; 0xf0 <handleEvent>
	handleEvent(D5);
 1b0:	82 e0       	ldi	r24, 0x02	; 2
 1b2:	9e df       	rcall	.-196    	; 0xf0 <handleEvent>
 1b4:	ff cf       	rjmp	.-2      	; 0x1b4 <main+0x10>

000001b6 <puts>:
 1b6:	0f 93       	push	r16
 1b8:	1f 93       	push	r17
 1ba:	cf 93       	push	r28
 1bc:	df 93       	push	r29
 1be:	e0 91 7f 01 	lds	r30, 0x017F	; 0x80017f <__iob+0x2>
 1c2:	f0 91 80 01 	lds	r31, 0x0180	; 0x800180 <__iob+0x3>
 1c6:	23 81       	ldd	r18, Z+3	; 0x03
 1c8:	21 ff       	sbrs	r18, 1
 1ca:	1b c0       	rjmp	.+54     	; 0x202 <puts+0x4c>
 1cc:	8c 01       	movw	r16, r24
 1ce:	d0 e0       	ldi	r29, 0x00	; 0
 1d0:	c0 e0       	ldi	r28, 0x00	; 0
 1d2:	f8 01       	movw	r30, r16
 1d4:	81 91       	ld	r24, Z+
 1d6:	8f 01       	movw	r16, r30
 1d8:	60 91 7f 01 	lds	r22, 0x017F	; 0x80017f <__iob+0x2>
 1dc:	70 91 80 01 	lds	r23, 0x0180	; 0x800180 <__iob+0x3>
 1e0:	db 01       	movw	r26, r22
 1e2:	18 96       	adiw	r26, 0x08	; 8
 1e4:	ed 91       	ld	r30, X+
 1e6:	fc 91       	ld	r31, X
 1e8:	19 97       	sbiw	r26, 0x09	; 9
 1ea:	88 23       	and	r24, r24
 1ec:	31 f0       	breq	.+12     	; 0x1fa <puts+0x44>
 1ee:	09 95       	icall
 1f0:	89 2b       	or	r24, r25
 1f2:	79 f3       	breq	.-34     	; 0x1d2 <puts+0x1c>
 1f4:	df ef       	ldi	r29, 0xFF	; 255
 1f6:	cf ef       	ldi	r28, 0xFF	; 255
 1f8:	ec cf       	rjmp	.-40     	; 0x1d2 <puts+0x1c>
 1fa:	8a e0       	ldi	r24, 0x0A	; 10
 1fc:	09 95       	icall
 1fe:	89 2b       	or	r24, r25
 200:	19 f0       	breq	.+6      	; 0x208 <puts+0x52>
 202:	8f ef       	ldi	r24, 0xFF	; 255
 204:	9f ef       	ldi	r25, 0xFF	; 255
 206:	02 c0       	rjmp	.+4      	; 0x20c <puts+0x56>
 208:	8d 2f       	mov	r24, r29
 20a:	9c 2f       	mov	r25, r28
 20c:	df 91       	pop	r29
 20e:	cf 91       	pop	r28
 210:	1f 91       	pop	r17
 212:	0f 91       	pop	r16
 214:	08 95       	ret

00000216 <_exit>:
 216:	f8 94       	cli

00000218 <__stop_program>:
 218:	ff cf       	rjmp	.-2      	; 0x218 <__stop_program>
