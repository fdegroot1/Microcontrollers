
Opdracht 4.B.3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000a  00800100  00000a8c  00000b20  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000a8c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  0080010a  0080010a  00000b2a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000b2a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000b88  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000090  00000000  00000000  00000bc4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000e13  00000000  00000000  00000c54  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a61  00000000  00000000  00001a67  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000065f  00000000  00000000  000024c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000017c  00000000  00000000  00002b28  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000051d  00000000  00000000  00002ca4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000057b  00000000  00000000  000031c1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000070  00000000  00000000  0000373c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ec e8       	ldi	r30, 0x8C	; 140
  a0:	fa e0       	ldi	r31, 0x0A	; 10
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	aa 30       	cpi	r26, 0x0A	; 10
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	aa e0       	ldi	r26, 0x0A	; 10
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	ae 30       	cpi	r26, 0x0E	; 14
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	b2 d0       	rcall	.+356    	; 0x228 <main>
  c4:	e1 c4       	rjmp	.+2498   	; 0xa88 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <lcd_strobe_lcd_e>:
outputs:
notes:			According datasheet HD44780
Version :    	DMK, Initial code
*******************************************************************/
void lcd_strobe_lcd_e(void) {
	PORTA |= (1<<LCD_E);	// E high
  c8:	8b b3       	in	r24, 0x1b	; 27
  ca:	80 64       	ori	r24, 0x40	; 64
  cc:	8b bb       	out	0x1b, r24	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ce:	8f ec       	ldi	r24, 0xCF	; 207
  d0:	97 e0       	ldi	r25, 0x07	; 7
  d2:	01 97       	sbiw	r24, 0x01	; 1
  d4:	f1 f7       	brne	.-4      	; 0xd2 <lcd_strobe_lcd_e+0xa>
  d6:	00 c0       	rjmp	.+0      	; 0xd8 <lcd_strobe_lcd_e+0x10>
  d8:	00 00       	nop
	_delay_ms(1);			// nodig
	PORTA &= ~(1<<LCD_E);  	// E low
  da:	8b b3       	in	r24, 0x1b	; 27
  dc:	8f 7b       	andi	r24, 0xBF	; 191
  de:	8b bb       	out	0x1b, r24	; 27
  e0:	8f ec       	ldi	r24, 0xCF	; 207
  e2:	97 e0       	ldi	r25, 0x07	; 7
  e4:	01 97       	sbiw	r24, 0x01	; 1
  e6:	f1 f7       	brne	.-4      	; 0xe4 <lcd_strobe_lcd_e+0x1c>
  e8:	00 c0       	rjmp	.+0      	; 0xea <lcd_strobe_lcd_e+0x22>
  ea:	00 00       	nop
  ec:	08 95       	ret

000000ee <init_4bits_mode>:
inputs:
outputs:
notes:			According datasheet HD44780 table 12
Version :    	DMK, Initial code
*******************************************************************/
void init_4bits_mode(void) {
  ee:	cf 93       	push	r28
	// PORTC output mode and all low (also E and RS pin)
	DDRC = 0xFF;
  f0:	8f ef       	ldi	r24, 0xFF	; 255
  f2:	84 bb       	out	0x14, r24	; 20
	DDRA = 0xFF;
  f4:	8a bb       	out	0x1a, r24	; 26
	PORTC = 0x00;
  f6:	15 ba       	out	0x15, r1	; 21
	PORTA = 0x00;
  f8:	1b ba       	out	0x1b, r1	; 27
	//PORTA = 0xFF;

	// Step 2 (table 12)
	PORTC = 0x20;	// function set
  fa:	c0 e2       	ldi	r28, 0x20	; 32
  fc:	c5 bb       	out	0x15, r28	; 21
	lcd_strobe_lcd_e();
  fe:	e4 df       	rcall	.-56     	; 0xc8 <lcd_strobe_lcd_e>

	// Step 3 (table 12)
	PORTC = 0x20;   // function set
	lcd_strobe_lcd_e();
 100:	c5 bb       	out	0x15, r28	; 21
 102:	e2 df       	rcall	.-60     	; 0xc8 <lcd_strobe_lcd_e>
	PORTC = 0x80;
 104:	80 e8       	ldi	r24, 0x80	; 128
	lcd_strobe_lcd_e();
 106:	85 bb       	out	0x15, r24	; 21

	// Step 4 (table 12)
	PORTC = 0x00;   // Display on/off control
 108:	df df       	rcall	.-66     	; 0xc8 <lcd_strobe_lcd_e>
	lcd_strobe_lcd_e();
 10a:	15 ba       	out	0x15, r1	; 21
	PORTC = 0xF0;
 10c:	dd df       	rcall	.-70     	; 0xc8 <lcd_strobe_lcd_e>
	lcd_strobe_lcd_e();
 10e:	80 ef       	ldi	r24, 0xF0	; 240

	// Step 4 (table 12)
	PORTC = 0x00;   // Entry mode set
 110:	85 bb       	out	0x15, r24	; 21
	lcd_strobe_lcd_e();
 112:	da df       	rcall	.-76     	; 0xc8 <lcd_strobe_lcd_e>
 114:	15 ba       	out	0x15, r1	; 21
	PORTC = 0x60;
 116:	d8 df       	rcall	.-80     	; 0xc8 <lcd_strobe_lcd_e>
 118:	80 e6       	ldi	r24, 0x60	; 96
	lcd_strobe_lcd_e();
 11a:	85 bb       	out	0x15, r24	; 21
 11c:	d5 df       	rcall	.-86     	; 0xc8 <lcd_strobe_lcd_e>
}
 11e:	cf 91       	pop	r28
 120:	08 95       	ret

00000122 <lcd_write_data>:
inputs:			byte - written to LCD
outputs:
notes:			According datasheet HD44780 table 12
Version :    	DMK, Initial code
*******************************************************************/
void lcd_write_data(unsigned char byte) {
 122:	cf 93       	push	r28
 124:	c8 2f       	mov	r28, r24
	// First nibble.
	PORTC = byte;
 126:	85 bb       	out	0x15, r24	; 21
	PORTA |= (1<<LCD_RS);
 128:	8b b3       	in	r24, 0x1b	; 27
 12a:	80 61       	ori	r24, 0x10	; 16
 12c:	8b bb       	out	0x1b, r24	; 27
	lcd_strobe_lcd_e();
 12e:	cc df       	rcall	.-104    	; 0xc8 <lcd_strobe_lcd_e>

	// Second nibble
	PORTC = (byte<<4);
 130:	c2 95       	swap	r28
 132:	c0 7f       	andi	r28, 0xF0	; 240
 134:	c5 bb       	out	0x15, r28	; 21
	PORTA |= (1<<LCD_RS);
 136:	8b b3       	in	r24, 0x1b	; 27
 138:	80 61       	ori	r24, 0x10	; 16
	lcd_strobe_lcd_e();
 13a:	8b bb       	out	0x1b, r24	; 27
 13c:	c5 df       	rcall	.-118    	; 0xc8 <lcd_strobe_lcd_e>
}
 13e:	cf 91       	pop	r28
 140:	08 95       	ret

00000142 <lcd_write_string>:
inputs:
outputs:
notes:			According datasheet HD44780 table 12
Version :    	DMK, Initial code
*******************************************************************/
void lcd_write_string(char *str) {
 142:	cf 93       	push	r28
 144:	df 93       	push	r29
 146:	ec 01       	movw	r28, r24
	// while(*str) {
	// 	lcd_write_data(*str++);
	// }

	// of met een for:
	for(;*str; str++){
 148:	02 c0       	rjmp	.+4      	; 0x14e <lcd_write_string+0xc>
		lcd_write_data(*str);
 14a:	eb df       	rcall	.-42     	; 0x122 <lcd_write_data>
	// while(*str) {
	// 	lcd_write_data(*str++);
	// }

	// of met een for:
	for(;*str; str++){
 14c:	21 96       	adiw	r28, 0x01	; 1
 14e:	88 81       	ld	r24, Y
 150:	81 11       	cpse	r24, r1
 152:	fb cf       	rjmp	.-10     	; 0x14a <lcd_write_string+0x8>
		lcd_write_data(*str);
	}
}
 154:	df 91       	pop	r29
 156:	cf 91       	pop	r28
 158:	08 95       	ret

0000015a <lcd_write_command>:
inputs:			byte - written to LCD
outputs:
notes:			According datasheet HD44780 table 12
Version :    	DMK, Initial code
*******************************************************************/
void lcd_write_command(unsigned char byte) {
 15a:	cf 93       	push	r28
 15c:	c8 2f       	mov	r28, r24
	// First nibble.
	PORTC = byte;
 15e:	85 bb       	out	0x15, r24	; 21
	PORTA &= ~(1<<LCD_RS);
 160:	8b b3       	in	r24, 0x1b	; 27
 162:	8f 7e       	andi	r24, 0xEF	; 239
 164:	8b bb       	out	0x1b, r24	; 27
	lcd_strobe_lcd_e();
 166:	b0 df       	rcall	.-160    	; 0xc8 <lcd_strobe_lcd_e>

	// Second nibble
	PORTC = (byte<<4);
 168:	c2 95       	swap	r28
 16a:	c0 7f       	andi	r28, 0xF0	; 240
 16c:	c5 bb       	out	0x15, r28	; 21
	PORTA &= ~(1<<LCD_RS);
 16e:	8b b3       	in	r24, 0x1b	; 27
 170:	8f 7e       	andi	r24, 0xEF	; 239
	lcd_strobe_lcd_e();
 172:	8b bb       	out	0x1b, r24	; 27
 174:	a9 df       	rcall	.-174    	; 0xc8 <lcd_strobe_lcd_e>
}
 176:	cf 91       	pop	r28
 178:	08 95       	ret

0000017a <lcd_clear>:


void lcd_clear() {
	lcd_write_command (0x01);						//Leeg display
 17a:	81 e0       	ldi	r24, 0x01	; 1
 17c:	ee df       	rcall	.-36     	; 0x15a <lcd_write_command>
 17e:	8f e9       	ldi	r24, 0x9F	; 159
 180:	9f e0       	ldi	r25, 0x0F	; 15
 182:	01 97       	sbiw	r24, 0x01	; 1
 184:	f1 f7       	brne	.-4      	; 0x182 <lcd_clear+0x8>
 186:	00 c0       	rjmp	.+0      	; 0x188 <lcd_clear+0xe>
 188:	00 00       	nop
	_delay_ms(2);
	lcd_write_command (0x80);						//Cursor terug naar start
 18a:	80 e8       	ldi	r24, 0x80	; 128
 18c:	e6 cf       	rjmp	.-52     	; 0x15a <lcd_write_command>
 18e:	08 95       	ret

00000190 <wait>:

void lcdInit(){
	init_4bits_mode();
	wait(10);
	lcd_clear();
	set_cursor(1);
 190:	20 e0       	ldi	r18, 0x00	; 0
 192:	30 e0       	ldi	r19, 0x00	; 0
 194:	08 c0       	rjmp	.+16     	; 0x1a6 <wait+0x16>
 196:	ef ec       	ldi	r30, 0xCF	; 207
 198:	f7 e0       	ldi	r31, 0x07	; 7
 19a:	31 97       	sbiw	r30, 0x01	; 1
 19c:	f1 f7       	brne	.-4      	; 0x19a <wait+0xa>
 19e:	00 c0       	rjmp	.+0      	; 0x1a0 <wait+0x10>
 1a0:	00 00       	nop
 1a2:	2f 5f       	subi	r18, 0xFF	; 255
 1a4:	3f 4f       	sbci	r19, 0xFF	; 255
 1a6:	28 17       	cp	r18, r24
 1a8:	39 07       	cpc	r19, r25
 1aa:	ac f3       	brlt	.-22     	; 0x196 <wait+0x6>
 1ac:	08 95       	ret

000001ae <adcInit>:
 1ae:	81 ee       	ldi	r24, 0xE1	; 225
 1b0:	87 b9       	out	0x07, r24	; 7
 1b2:	86 ee       	ldi	r24, 0xE6	; 230
 1b4:	86 b9       	out	0x06, r24	; 6
 1b6:	08 95       	ret

000001b8 <toString>:
 1b8:	cf 92       	push	r12
 1ba:	df 92       	push	r13
 1bc:	ef 92       	push	r14
 1be:	ff 92       	push	r15
 1c0:	0f 93       	push	r16
 1c2:	1f 93       	push	r17
 1c4:	cf 93       	push	r28
 1c6:	df 93       	push	r29
 1c8:	01 96       	adiw	r24, 0x01	; 1
 1ca:	7c 01       	movw	r14, r24
 1cc:	ff 92       	push	r15
 1ce:	8f 93       	push	r24
 1d0:	06 e0       	ldi	r16, 0x06	; 6
 1d2:	11 e0       	ldi	r17, 0x01	; 1
 1d4:	1f 93       	push	r17
 1d6:	0f 93       	push	r16
 1d8:	1f 92       	push	r1
 1da:	1f 92       	push	r1
 1dc:	1f 92       	push	r1
 1de:	1f 92       	push	r1
 1e0:	6a d1       	rcall	.+724    	; 0x4b6 <snprintf>
 1e2:	ec 01       	movw	r28, r24
 1e4:	21 96       	adiw	r28, 0x01	; 1
 1e6:	8c 2f       	mov	r24, r28
 1e8:	9d 2f       	mov	r25, r29
 1ea:	44 d0       	rcall	.+136    	; 0x274 <malloc>
 1ec:	c8 2e       	mov	r12, r24
 1ee:	d9 2e       	mov	r13, r25
 1f0:	ff 92       	push	r15
 1f2:	ef 92       	push	r14
 1f4:	1f 93       	push	r17
 1f6:	0f 93       	push	r16
 1f8:	df 93       	push	r29
 1fa:	cf 93       	push	r28
 1fc:	df 92       	push	r13
 1fe:	cf 92       	push	r12
 200:	5a d1       	rcall	.+692    	; 0x4b6 <snprintf>
 202:	8d b7       	in	r24, 0x3d	; 61
 204:	9e b7       	in	r25, 0x3e	; 62
 206:	40 96       	adiw	r24, 0x10	; 16
 208:	0f b6       	in	r0, 0x3f	; 63
 20a:	f8 94       	cli
 20c:	9e bf       	out	0x3e, r25	; 62
 20e:	0f be       	out	0x3f, r0	; 63
 210:	8d bf       	out	0x3d, r24	; 61
 212:	8c 2d       	mov	r24, r12
 214:	9d 2d       	mov	r25, r13
 216:	df 91       	pop	r29
 218:	cf 91       	pop	r28
 21a:	1f 91       	pop	r17
 21c:	0f 91       	pop	r16
 21e:	ff 90       	pop	r15
 220:	ef 90       	pop	r14
 222:	df 90       	pop	r13
 224:	cf 90       	pop	r12
 226:	08 95       	ret

00000228 <main>:
}

// Main program: Counting on T1
int main( void )
{
	DDRF = 0x00;					// set PORTF for input (ADC)
 228:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
	DDRB = 0xFF;					// set PORTA for output 
 22c:	8f ef       	ldi	r24, 0xFF	; 255
 22e:	87 bb       	out	0x17, r24	; 23
	adcInit();
 230:	be df       	rcall	.-132    	; 0x1ae <adcInit>
							// initialize ADC
	init_4bits_mode();
 232:	5d df       	rcall	.-326    	; 0xee <init_4bits_mode>
 234:	8f e1       	ldi	r24, 0x1F	; 31
 236:	9e e4       	ldi	r25, 0x4E	; 78
 238:	01 97       	sbiw	r24, 0x01	; 1
 23a:	f1 f7       	brne	.-4      	; 0x238 <main+0x10>
 23c:	00 c0       	rjmp	.+0      	; 0x23e <main+0x16>
 23e:	00 00       	nop
	_delay_ms(10);
	lcd_clear();
 240:	9c df       	rcall	.-200    	; 0x17a <lcd_clear>
 242:	8f e1       	ldi	r24, 0x1F	; 31
 244:	9e e4       	ldi	r25, 0x4E	; 78
 246:	01 97       	sbiw	r24, 0x01	; 1
 248:	f1 f7       	brne	.-4      	; 0x246 <main+0x1e>
 24a:	00 c0       	rjmp	.+0      	; 0x24c <main+0x24>
 24c:	00 00       	nop
	while (1)
	{
		//ADCSRA |= BIT(6);				// Start ADC
		//while ( ADCSRA & BIT(6) ) ;		// Wait for completion
		//PORTC = ADCL;	
		PORTB = ADCH;					// Show MSB (bit 9:2) of ADC
 24e:	85 b1       	in	r24, 0x05	; 5
 250:	88 bb       	out	0x18, r24	; 24
		lcd_clear();
 252:	93 df       	rcall	.-218    	; 0x17a <lcd_clear>
 254:	8f e1       	ldi	r24, 0x1F	; 31
 256:	9e e4       	ldi	r25, 0x4E	; 78
 258:	01 97       	sbiw	r24, 0x01	; 1
 25a:	f1 f7       	brne	.-4      	; 0x258 <main+0x30>
 25c:	00 c0       	rjmp	.+0      	; 0x25e <main+0x36>
 25e:	00 00       	nop
 260:	85 b1       	in	r24, 0x05	; 5
		_delay_ms(10);
		lcd_write_string(toString((ADCH<<1)));
 262:	90 e0       	ldi	r25, 0x00	; 0
 264:	88 0f       	add	r24, r24
 266:	99 1f       	adc	r25, r25
 268:	a7 df       	rcall	.-178    	; 0x1b8 <toString>
 26a:	6b df       	rcall	.-298    	; 0x142 <lcd_write_string>
		wait(500);						// every 50 ms (busy waiting)
 26c:	84 ef       	ldi	r24, 0xF4	; 244
 26e:	91 e0       	ldi	r25, 0x01	; 1
 270:	8f df       	rcall	.-226    	; 0x190 <wait>
 272:	ed cf       	rjmp	.-38     	; 0x24e <main+0x26>

00000274 <malloc>:
 274:	0f 93       	push	r16
 276:	1f 93       	push	r17
 278:	cf 93       	push	r28
 27a:	df 93       	push	r29
 27c:	82 30       	cpi	r24, 0x02	; 2
 27e:	91 05       	cpc	r25, r1
 280:	10 f4       	brcc	.+4      	; 0x286 <malloc+0x12>
 282:	82 e0       	ldi	r24, 0x02	; 2
 284:	90 e0       	ldi	r25, 0x00	; 0
 286:	e0 91 0c 01 	lds	r30, 0x010C	; 0x80010c <__flp>
 28a:	f0 91 0d 01 	lds	r31, 0x010D	; 0x80010d <__flp+0x1>
 28e:	20 e0       	ldi	r18, 0x00	; 0
 290:	30 e0       	ldi	r19, 0x00	; 0
 292:	a0 e0       	ldi	r26, 0x00	; 0
 294:	b0 e0       	ldi	r27, 0x00	; 0
 296:	30 97       	sbiw	r30, 0x00	; 0
 298:	19 f1       	breq	.+70     	; 0x2e0 <malloc+0x6c>
 29a:	40 81       	ld	r20, Z
 29c:	51 81       	ldd	r21, Z+1	; 0x01
 29e:	02 81       	ldd	r16, Z+2	; 0x02
 2a0:	13 81       	ldd	r17, Z+3	; 0x03
 2a2:	48 17       	cp	r20, r24
 2a4:	59 07       	cpc	r21, r25
 2a6:	c8 f0       	brcs	.+50     	; 0x2da <malloc+0x66>
 2a8:	84 17       	cp	r24, r20
 2aa:	95 07       	cpc	r25, r21
 2ac:	69 f4       	brne	.+26     	; 0x2c8 <malloc+0x54>
 2ae:	10 97       	sbiw	r26, 0x00	; 0
 2b0:	31 f0       	breq	.+12     	; 0x2be <malloc+0x4a>
 2b2:	12 96       	adiw	r26, 0x02	; 2
 2b4:	0c 93       	st	X, r16
 2b6:	12 97       	sbiw	r26, 0x02	; 2
 2b8:	13 96       	adiw	r26, 0x03	; 3
 2ba:	1c 93       	st	X, r17
 2bc:	27 c0       	rjmp	.+78     	; 0x30c <malloc+0x98>
 2be:	00 93 0c 01 	sts	0x010C, r16	; 0x80010c <__flp>
 2c2:	10 93 0d 01 	sts	0x010D, r17	; 0x80010d <__flp+0x1>
 2c6:	22 c0       	rjmp	.+68     	; 0x30c <malloc+0x98>
 2c8:	21 15       	cp	r18, r1
 2ca:	31 05       	cpc	r19, r1
 2cc:	19 f0       	breq	.+6      	; 0x2d4 <malloc+0x60>
 2ce:	42 17       	cp	r20, r18
 2d0:	53 07       	cpc	r21, r19
 2d2:	18 f4       	brcc	.+6      	; 0x2da <malloc+0x66>
 2d4:	9a 01       	movw	r18, r20
 2d6:	bd 01       	movw	r22, r26
 2d8:	ef 01       	movw	r28, r30
 2da:	df 01       	movw	r26, r30
 2dc:	f8 01       	movw	r30, r16
 2de:	db cf       	rjmp	.-74     	; 0x296 <malloc+0x22>
 2e0:	21 15       	cp	r18, r1
 2e2:	31 05       	cpc	r19, r1
 2e4:	f9 f0       	breq	.+62     	; 0x324 <malloc+0xb0>
 2e6:	28 1b       	sub	r18, r24
 2e8:	39 0b       	sbc	r19, r25
 2ea:	24 30       	cpi	r18, 0x04	; 4
 2ec:	31 05       	cpc	r19, r1
 2ee:	80 f4       	brcc	.+32     	; 0x310 <malloc+0x9c>
 2f0:	8a 81       	ldd	r24, Y+2	; 0x02
 2f2:	9b 81       	ldd	r25, Y+3	; 0x03
 2f4:	61 15       	cp	r22, r1
 2f6:	71 05       	cpc	r23, r1
 2f8:	21 f0       	breq	.+8      	; 0x302 <malloc+0x8e>
 2fa:	fb 01       	movw	r30, r22
 2fc:	93 83       	std	Z+3, r25	; 0x03
 2fe:	82 83       	std	Z+2, r24	; 0x02
 300:	04 c0       	rjmp	.+8      	; 0x30a <malloc+0x96>
 302:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <__flp+0x1>
 306:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <__flp>
 30a:	fe 01       	movw	r30, r28
 30c:	32 96       	adiw	r30, 0x02	; 2
 30e:	44 c0       	rjmp	.+136    	; 0x398 <malloc+0x124>
 310:	fe 01       	movw	r30, r28
 312:	e2 0f       	add	r30, r18
 314:	f3 1f       	adc	r31, r19
 316:	81 93       	st	Z+, r24
 318:	91 93       	st	Z+, r25
 31a:	22 50       	subi	r18, 0x02	; 2
 31c:	31 09       	sbc	r19, r1
 31e:	39 83       	std	Y+1, r19	; 0x01
 320:	28 83       	st	Y, r18
 322:	3a c0       	rjmp	.+116    	; 0x398 <malloc+0x124>
 324:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
 328:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
 32c:	23 2b       	or	r18, r19
 32e:	41 f4       	brne	.+16     	; 0x340 <malloc+0xcc>
 330:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 334:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 338:	30 93 0b 01 	sts	0x010B, r19	; 0x80010b <__data_end+0x1>
 33c:	20 93 0a 01 	sts	0x010A, r18	; 0x80010a <__data_end>
 340:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 344:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 348:	21 15       	cp	r18, r1
 34a:	31 05       	cpc	r19, r1
 34c:	41 f4       	brne	.+16     	; 0x35e <malloc+0xea>
 34e:	2d b7       	in	r18, 0x3d	; 61
 350:	3e b7       	in	r19, 0x3e	; 62
 352:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 356:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 35a:	24 1b       	sub	r18, r20
 35c:	35 0b       	sbc	r19, r21
 35e:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <__data_end>
 362:	f0 91 0b 01 	lds	r31, 0x010B	; 0x80010b <__data_end+0x1>
 366:	e2 17       	cp	r30, r18
 368:	f3 07       	cpc	r31, r19
 36a:	a0 f4       	brcc	.+40     	; 0x394 <malloc+0x120>
 36c:	2e 1b       	sub	r18, r30
 36e:	3f 0b       	sbc	r19, r31
 370:	28 17       	cp	r18, r24
 372:	39 07       	cpc	r19, r25
 374:	78 f0       	brcs	.+30     	; 0x394 <malloc+0x120>
 376:	ac 01       	movw	r20, r24
 378:	4e 5f       	subi	r20, 0xFE	; 254
 37a:	5f 4f       	sbci	r21, 0xFF	; 255
 37c:	24 17       	cp	r18, r20
 37e:	35 07       	cpc	r19, r21
 380:	48 f0       	brcs	.+18     	; 0x394 <malloc+0x120>
 382:	4e 0f       	add	r20, r30
 384:	5f 1f       	adc	r21, r31
 386:	50 93 0b 01 	sts	0x010B, r21	; 0x80010b <__data_end+0x1>
 38a:	40 93 0a 01 	sts	0x010A, r20	; 0x80010a <__data_end>
 38e:	81 93       	st	Z+, r24
 390:	91 93       	st	Z+, r25
 392:	02 c0       	rjmp	.+4      	; 0x398 <malloc+0x124>
 394:	e0 e0       	ldi	r30, 0x00	; 0
 396:	f0 e0       	ldi	r31, 0x00	; 0
 398:	cf 01       	movw	r24, r30
 39a:	df 91       	pop	r29
 39c:	cf 91       	pop	r28
 39e:	1f 91       	pop	r17
 3a0:	0f 91       	pop	r16
 3a2:	08 95       	ret

000003a4 <free>:
 3a4:	cf 93       	push	r28
 3a6:	df 93       	push	r29
 3a8:	00 97       	sbiw	r24, 0x00	; 0
 3aa:	09 f4       	brne	.+2      	; 0x3ae <free+0xa>
 3ac:	81 c0       	rjmp	.+258    	; 0x4b0 <__LOCK_REGION_LENGTH__+0xb0>
 3ae:	fc 01       	movw	r30, r24
 3b0:	32 97       	sbiw	r30, 0x02	; 2
 3b2:	13 82       	std	Z+3, r1	; 0x03
 3b4:	12 82       	std	Z+2, r1	; 0x02
 3b6:	a0 91 0c 01 	lds	r26, 0x010C	; 0x80010c <__flp>
 3ba:	b0 91 0d 01 	lds	r27, 0x010D	; 0x80010d <__flp+0x1>
 3be:	10 97       	sbiw	r26, 0x00	; 0
 3c0:	81 f4       	brne	.+32     	; 0x3e2 <free+0x3e>
 3c2:	20 81       	ld	r18, Z
 3c4:	31 81       	ldd	r19, Z+1	; 0x01
 3c6:	82 0f       	add	r24, r18
 3c8:	93 1f       	adc	r25, r19
 3ca:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
 3ce:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
 3d2:	28 17       	cp	r18, r24
 3d4:	39 07       	cpc	r19, r25
 3d6:	51 f5       	brne	.+84     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 3d8:	f0 93 0b 01 	sts	0x010B, r31	; 0x80010b <__data_end+0x1>
 3dc:	e0 93 0a 01 	sts	0x010A, r30	; 0x80010a <__data_end>
 3e0:	67 c0       	rjmp	.+206    	; 0x4b0 <__LOCK_REGION_LENGTH__+0xb0>
 3e2:	ed 01       	movw	r28, r26
 3e4:	20 e0       	ldi	r18, 0x00	; 0
 3e6:	30 e0       	ldi	r19, 0x00	; 0
 3e8:	ce 17       	cp	r28, r30
 3ea:	df 07       	cpc	r29, r31
 3ec:	40 f4       	brcc	.+16     	; 0x3fe <free+0x5a>
 3ee:	4a 81       	ldd	r20, Y+2	; 0x02
 3f0:	5b 81       	ldd	r21, Y+3	; 0x03
 3f2:	9e 01       	movw	r18, r28
 3f4:	41 15       	cp	r20, r1
 3f6:	51 05       	cpc	r21, r1
 3f8:	f1 f0       	breq	.+60     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 3fa:	ea 01       	movw	r28, r20
 3fc:	f5 cf       	rjmp	.-22     	; 0x3e8 <free+0x44>
 3fe:	d3 83       	std	Z+3, r29	; 0x03
 400:	c2 83       	std	Z+2, r28	; 0x02
 402:	40 81       	ld	r20, Z
 404:	51 81       	ldd	r21, Z+1	; 0x01
 406:	84 0f       	add	r24, r20
 408:	95 1f       	adc	r25, r21
 40a:	c8 17       	cp	r28, r24
 40c:	d9 07       	cpc	r29, r25
 40e:	59 f4       	brne	.+22     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 410:	88 81       	ld	r24, Y
 412:	99 81       	ldd	r25, Y+1	; 0x01
 414:	84 0f       	add	r24, r20
 416:	95 1f       	adc	r25, r21
 418:	02 96       	adiw	r24, 0x02	; 2
 41a:	91 83       	std	Z+1, r25	; 0x01
 41c:	80 83       	st	Z, r24
 41e:	8a 81       	ldd	r24, Y+2	; 0x02
 420:	9b 81       	ldd	r25, Y+3	; 0x03
 422:	93 83       	std	Z+3, r25	; 0x03
 424:	82 83       	std	Z+2, r24	; 0x02
 426:	21 15       	cp	r18, r1
 428:	31 05       	cpc	r19, r1
 42a:	29 f4       	brne	.+10     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 42c:	f0 93 0d 01 	sts	0x010D, r31	; 0x80010d <__flp+0x1>
 430:	e0 93 0c 01 	sts	0x010C, r30	; 0x80010c <__flp>
 434:	3d c0       	rjmp	.+122    	; 0x4b0 <__LOCK_REGION_LENGTH__+0xb0>
 436:	e9 01       	movw	r28, r18
 438:	fb 83       	std	Y+3, r31	; 0x03
 43a:	ea 83       	std	Y+2, r30	; 0x02
 43c:	49 91       	ld	r20, Y+
 43e:	59 91       	ld	r21, Y+
 440:	c4 0f       	add	r28, r20
 442:	d5 1f       	adc	r29, r21
 444:	ec 17       	cp	r30, r28
 446:	fd 07       	cpc	r31, r29
 448:	61 f4       	brne	.+24     	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
 44a:	80 81       	ld	r24, Z
 44c:	91 81       	ldd	r25, Z+1	; 0x01
 44e:	84 0f       	add	r24, r20
 450:	95 1f       	adc	r25, r21
 452:	02 96       	adiw	r24, 0x02	; 2
 454:	e9 01       	movw	r28, r18
 456:	99 83       	std	Y+1, r25	; 0x01
 458:	88 83       	st	Y, r24
 45a:	82 81       	ldd	r24, Z+2	; 0x02
 45c:	93 81       	ldd	r25, Z+3	; 0x03
 45e:	9b 83       	std	Y+3, r25	; 0x03
 460:	8a 83       	std	Y+2, r24	; 0x02
 462:	e0 e0       	ldi	r30, 0x00	; 0
 464:	f0 e0       	ldi	r31, 0x00	; 0
 466:	12 96       	adiw	r26, 0x02	; 2
 468:	8d 91       	ld	r24, X+
 46a:	9c 91       	ld	r25, X
 46c:	13 97       	sbiw	r26, 0x03	; 3
 46e:	00 97       	sbiw	r24, 0x00	; 0
 470:	19 f0       	breq	.+6      	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
 472:	fd 01       	movw	r30, r26
 474:	dc 01       	movw	r26, r24
 476:	f7 cf       	rjmp	.-18     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 478:	8d 91       	ld	r24, X+
 47a:	9c 91       	ld	r25, X
 47c:	11 97       	sbiw	r26, 0x01	; 1
 47e:	9d 01       	movw	r18, r26
 480:	2e 5f       	subi	r18, 0xFE	; 254
 482:	3f 4f       	sbci	r19, 0xFF	; 255
 484:	82 0f       	add	r24, r18
 486:	93 1f       	adc	r25, r19
 488:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
 48c:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
 490:	28 17       	cp	r18, r24
 492:	39 07       	cpc	r19, r25
 494:	69 f4       	brne	.+26     	; 0x4b0 <__LOCK_REGION_LENGTH__+0xb0>
 496:	30 97       	sbiw	r30, 0x00	; 0
 498:	29 f4       	brne	.+10     	; 0x4a4 <__LOCK_REGION_LENGTH__+0xa4>
 49a:	10 92 0d 01 	sts	0x010D, r1	; 0x80010d <__flp+0x1>
 49e:	10 92 0c 01 	sts	0x010C, r1	; 0x80010c <__flp>
 4a2:	02 c0       	rjmp	.+4      	; 0x4a8 <__LOCK_REGION_LENGTH__+0xa8>
 4a4:	13 82       	std	Z+3, r1	; 0x03
 4a6:	12 82       	std	Z+2, r1	; 0x02
 4a8:	b0 93 0b 01 	sts	0x010B, r27	; 0x80010b <__data_end+0x1>
 4ac:	a0 93 0a 01 	sts	0x010A, r26	; 0x80010a <__data_end>
 4b0:	df 91       	pop	r29
 4b2:	cf 91       	pop	r28
 4b4:	08 95       	ret

000004b6 <snprintf>:
 4b6:	0f 93       	push	r16
 4b8:	1f 93       	push	r17
 4ba:	cf 93       	push	r28
 4bc:	df 93       	push	r29
 4be:	cd b7       	in	r28, 0x3d	; 61
 4c0:	de b7       	in	r29, 0x3e	; 62
 4c2:	2e 97       	sbiw	r28, 0x0e	; 14
 4c4:	0f b6       	in	r0, 0x3f	; 63
 4c6:	f8 94       	cli
 4c8:	de bf       	out	0x3e, r29	; 62
 4ca:	0f be       	out	0x3f, r0	; 63
 4cc:	cd bf       	out	0x3d, r28	; 61
 4ce:	0d 89       	ldd	r16, Y+21	; 0x15
 4d0:	1e 89       	ldd	r17, Y+22	; 0x16
 4d2:	8f 89       	ldd	r24, Y+23	; 0x17
 4d4:	98 8d       	ldd	r25, Y+24	; 0x18
 4d6:	26 e0       	ldi	r18, 0x06	; 6
 4d8:	2c 83       	std	Y+4, r18	; 0x04
 4da:	1a 83       	std	Y+2, r17	; 0x02
 4dc:	09 83       	std	Y+1, r16	; 0x01
 4de:	97 ff       	sbrs	r25, 7
 4e0:	02 c0       	rjmp	.+4      	; 0x4e6 <snprintf+0x30>
 4e2:	80 e0       	ldi	r24, 0x00	; 0
 4e4:	90 e8       	ldi	r25, 0x80	; 128
 4e6:	01 97       	sbiw	r24, 0x01	; 1
 4e8:	9e 83       	std	Y+6, r25	; 0x06
 4ea:	8d 83       	std	Y+5, r24	; 0x05
 4ec:	ae 01       	movw	r20, r28
 4ee:	45 5e       	subi	r20, 0xE5	; 229
 4f0:	5f 4f       	sbci	r21, 0xFF	; 255
 4f2:	69 8d       	ldd	r22, Y+25	; 0x19
 4f4:	7a 8d       	ldd	r23, Y+26	; 0x1a
 4f6:	ce 01       	movw	r24, r28
 4f8:	01 96       	adiw	r24, 0x01	; 1
 4fa:	19 d0       	rcall	.+50     	; 0x52e <vfprintf>
 4fc:	4d 81       	ldd	r20, Y+5	; 0x05
 4fe:	5e 81       	ldd	r21, Y+6	; 0x06
 500:	57 fd       	sbrc	r21, 7
 502:	0a c0       	rjmp	.+20     	; 0x518 <snprintf+0x62>
 504:	2f 81       	ldd	r18, Y+7	; 0x07
 506:	38 85       	ldd	r19, Y+8	; 0x08
 508:	42 17       	cp	r20, r18
 50a:	53 07       	cpc	r21, r19
 50c:	0c f4       	brge	.+2      	; 0x510 <snprintf+0x5a>
 50e:	9a 01       	movw	r18, r20
 510:	f8 01       	movw	r30, r16
 512:	e2 0f       	add	r30, r18
 514:	f3 1f       	adc	r31, r19
 516:	10 82       	st	Z, r1
 518:	2e 96       	adiw	r28, 0x0e	; 14
 51a:	0f b6       	in	r0, 0x3f	; 63
 51c:	f8 94       	cli
 51e:	de bf       	out	0x3e, r29	; 62
 520:	0f be       	out	0x3f, r0	; 63
 522:	cd bf       	out	0x3d, r28	; 61
 524:	df 91       	pop	r29
 526:	cf 91       	pop	r28
 528:	1f 91       	pop	r17
 52a:	0f 91       	pop	r16
 52c:	08 95       	ret

0000052e <vfprintf>:
 52e:	2f 92       	push	r2
 530:	3f 92       	push	r3
 532:	4f 92       	push	r4
 534:	5f 92       	push	r5
 536:	6f 92       	push	r6
 538:	7f 92       	push	r7
 53a:	8f 92       	push	r8
 53c:	9f 92       	push	r9
 53e:	af 92       	push	r10
 540:	bf 92       	push	r11
 542:	cf 92       	push	r12
 544:	df 92       	push	r13
 546:	ef 92       	push	r14
 548:	ff 92       	push	r15
 54a:	0f 93       	push	r16
 54c:	1f 93       	push	r17
 54e:	cf 93       	push	r28
 550:	df 93       	push	r29
 552:	cd b7       	in	r28, 0x3d	; 61
 554:	de b7       	in	r29, 0x3e	; 62
 556:	2b 97       	sbiw	r28, 0x0b	; 11
 558:	0f b6       	in	r0, 0x3f	; 63
 55a:	f8 94       	cli
 55c:	de bf       	out	0x3e, r29	; 62
 55e:	0f be       	out	0x3f, r0	; 63
 560:	cd bf       	out	0x3d, r28	; 61
 562:	6c 01       	movw	r12, r24
 564:	7b 01       	movw	r14, r22
 566:	8a 01       	movw	r16, r20
 568:	fc 01       	movw	r30, r24
 56a:	17 82       	std	Z+7, r1	; 0x07
 56c:	16 82       	std	Z+6, r1	; 0x06
 56e:	83 81       	ldd	r24, Z+3	; 0x03
 570:	81 ff       	sbrs	r24, 1
 572:	bf c1       	rjmp	.+894    	; 0x8f2 <vfprintf+0x3c4>
 574:	ce 01       	movw	r24, r28
 576:	01 96       	adiw	r24, 0x01	; 1
 578:	3c 01       	movw	r6, r24
 57a:	f6 01       	movw	r30, r12
 57c:	93 81       	ldd	r25, Z+3	; 0x03
 57e:	f7 01       	movw	r30, r14
 580:	93 fd       	sbrc	r25, 3
 582:	85 91       	lpm	r24, Z+
 584:	93 ff       	sbrs	r25, 3
 586:	81 91       	ld	r24, Z+
 588:	7f 01       	movw	r14, r30
 58a:	88 23       	and	r24, r24
 58c:	09 f4       	brne	.+2      	; 0x590 <vfprintf+0x62>
 58e:	ad c1       	rjmp	.+858    	; 0x8ea <vfprintf+0x3bc>
 590:	85 32       	cpi	r24, 0x25	; 37
 592:	39 f4       	brne	.+14     	; 0x5a2 <vfprintf+0x74>
 594:	93 fd       	sbrc	r25, 3
 596:	85 91       	lpm	r24, Z+
 598:	93 ff       	sbrs	r25, 3
 59a:	81 91       	ld	r24, Z+
 59c:	7f 01       	movw	r14, r30
 59e:	85 32       	cpi	r24, 0x25	; 37
 5a0:	21 f4       	brne	.+8      	; 0x5aa <vfprintf+0x7c>
 5a2:	b6 01       	movw	r22, r12
 5a4:	90 e0       	ldi	r25, 0x00	; 0
 5a6:	d6 d1       	rcall	.+940    	; 0x954 <fputc>
 5a8:	e8 cf       	rjmp	.-48     	; 0x57a <vfprintf+0x4c>
 5aa:	91 2c       	mov	r9, r1
 5ac:	21 2c       	mov	r2, r1
 5ae:	31 2c       	mov	r3, r1
 5b0:	ff e1       	ldi	r31, 0x1F	; 31
 5b2:	f3 15       	cp	r31, r3
 5b4:	d8 f0       	brcs	.+54     	; 0x5ec <vfprintf+0xbe>
 5b6:	8b 32       	cpi	r24, 0x2B	; 43
 5b8:	79 f0       	breq	.+30     	; 0x5d8 <vfprintf+0xaa>
 5ba:	38 f4       	brcc	.+14     	; 0x5ca <vfprintf+0x9c>
 5bc:	80 32       	cpi	r24, 0x20	; 32
 5be:	79 f0       	breq	.+30     	; 0x5de <vfprintf+0xb0>
 5c0:	83 32       	cpi	r24, 0x23	; 35
 5c2:	a1 f4       	brne	.+40     	; 0x5ec <vfprintf+0xbe>
 5c4:	23 2d       	mov	r18, r3
 5c6:	20 61       	ori	r18, 0x10	; 16
 5c8:	1d c0       	rjmp	.+58     	; 0x604 <vfprintf+0xd6>
 5ca:	8d 32       	cpi	r24, 0x2D	; 45
 5cc:	61 f0       	breq	.+24     	; 0x5e6 <vfprintf+0xb8>
 5ce:	80 33       	cpi	r24, 0x30	; 48
 5d0:	69 f4       	brne	.+26     	; 0x5ec <vfprintf+0xbe>
 5d2:	23 2d       	mov	r18, r3
 5d4:	21 60       	ori	r18, 0x01	; 1
 5d6:	16 c0       	rjmp	.+44     	; 0x604 <vfprintf+0xd6>
 5d8:	83 2d       	mov	r24, r3
 5da:	82 60       	ori	r24, 0x02	; 2
 5dc:	38 2e       	mov	r3, r24
 5de:	e3 2d       	mov	r30, r3
 5e0:	e4 60       	ori	r30, 0x04	; 4
 5e2:	3e 2e       	mov	r3, r30
 5e4:	2a c0       	rjmp	.+84     	; 0x63a <vfprintf+0x10c>
 5e6:	f3 2d       	mov	r31, r3
 5e8:	f8 60       	ori	r31, 0x08	; 8
 5ea:	1d c0       	rjmp	.+58     	; 0x626 <vfprintf+0xf8>
 5ec:	37 fc       	sbrc	r3, 7
 5ee:	2d c0       	rjmp	.+90     	; 0x64a <vfprintf+0x11c>
 5f0:	20 ed       	ldi	r18, 0xD0	; 208
 5f2:	28 0f       	add	r18, r24
 5f4:	2a 30       	cpi	r18, 0x0A	; 10
 5f6:	40 f0       	brcs	.+16     	; 0x608 <vfprintf+0xda>
 5f8:	8e 32       	cpi	r24, 0x2E	; 46
 5fa:	b9 f4       	brne	.+46     	; 0x62a <vfprintf+0xfc>
 5fc:	36 fc       	sbrc	r3, 6
 5fe:	75 c1       	rjmp	.+746    	; 0x8ea <vfprintf+0x3bc>
 600:	23 2d       	mov	r18, r3
 602:	20 64       	ori	r18, 0x40	; 64
 604:	32 2e       	mov	r3, r18
 606:	19 c0       	rjmp	.+50     	; 0x63a <vfprintf+0x10c>
 608:	36 fe       	sbrs	r3, 6
 60a:	06 c0       	rjmp	.+12     	; 0x618 <vfprintf+0xea>
 60c:	8a e0       	ldi	r24, 0x0A	; 10
 60e:	98 9e       	mul	r9, r24
 610:	20 0d       	add	r18, r0
 612:	11 24       	eor	r1, r1
 614:	92 2e       	mov	r9, r18
 616:	11 c0       	rjmp	.+34     	; 0x63a <vfprintf+0x10c>
 618:	ea e0       	ldi	r30, 0x0A	; 10
 61a:	2e 9e       	mul	r2, r30
 61c:	20 0d       	add	r18, r0
 61e:	11 24       	eor	r1, r1
 620:	22 2e       	mov	r2, r18
 622:	f3 2d       	mov	r31, r3
 624:	f0 62       	ori	r31, 0x20	; 32
 626:	3f 2e       	mov	r3, r31
 628:	08 c0       	rjmp	.+16     	; 0x63a <vfprintf+0x10c>
 62a:	8c 36       	cpi	r24, 0x6C	; 108
 62c:	21 f4       	brne	.+8      	; 0x636 <vfprintf+0x108>
 62e:	83 2d       	mov	r24, r3
 630:	80 68       	ori	r24, 0x80	; 128
 632:	38 2e       	mov	r3, r24
 634:	02 c0       	rjmp	.+4      	; 0x63a <vfprintf+0x10c>
 636:	88 36       	cpi	r24, 0x68	; 104
 638:	41 f4       	brne	.+16     	; 0x64a <vfprintf+0x11c>
 63a:	f7 01       	movw	r30, r14
 63c:	93 fd       	sbrc	r25, 3
 63e:	85 91       	lpm	r24, Z+
 640:	93 ff       	sbrs	r25, 3
 642:	81 91       	ld	r24, Z+
 644:	7f 01       	movw	r14, r30
 646:	81 11       	cpse	r24, r1
 648:	b3 cf       	rjmp	.-154    	; 0x5b0 <vfprintf+0x82>
 64a:	98 2f       	mov	r25, r24
 64c:	9f 7d       	andi	r25, 0xDF	; 223
 64e:	95 54       	subi	r25, 0x45	; 69
 650:	93 30       	cpi	r25, 0x03	; 3
 652:	28 f4       	brcc	.+10     	; 0x65e <vfprintf+0x130>
 654:	0c 5f       	subi	r16, 0xFC	; 252
 656:	1f 4f       	sbci	r17, 0xFF	; 255
 658:	9f e3       	ldi	r25, 0x3F	; 63
 65a:	99 83       	std	Y+1, r25	; 0x01
 65c:	0d c0       	rjmp	.+26     	; 0x678 <vfprintf+0x14a>
 65e:	83 36       	cpi	r24, 0x63	; 99
 660:	31 f0       	breq	.+12     	; 0x66e <vfprintf+0x140>
 662:	83 37       	cpi	r24, 0x73	; 115
 664:	71 f0       	breq	.+28     	; 0x682 <vfprintf+0x154>
 666:	83 35       	cpi	r24, 0x53	; 83
 668:	09 f0       	breq	.+2      	; 0x66c <vfprintf+0x13e>
 66a:	55 c0       	rjmp	.+170    	; 0x716 <vfprintf+0x1e8>
 66c:	20 c0       	rjmp	.+64     	; 0x6ae <vfprintf+0x180>
 66e:	f8 01       	movw	r30, r16
 670:	80 81       	ld	r24, Z
 672:	89 83       	std	Y+1, r24	; 0x01
 674:	0e 5f       	subi	r16, 0xFE	; 254
 676:	1f 4f       	sbci	r17, 0xFF	; 255
 678:	88 24       	eor	r8, r8
 67a:	83 94       	inc	r8
 67c:	91 2c       	mov	r9, r1
 67e:	53 01       	movw	r10, r6
 680:	12 c0       	rjmp	.+36     	; 0x6a6 <vfprintf+0x178>
 682:	28 01       	movw	r4, r16
 684:	f2 e0       	ldi	r31, 0x02	; 2
 686:	4f 0e       	add	r4, r31
 688:	51 1c       	adc	r5, r1
 68a:	f8 01       	movw	r30, r16
 68c:	a0 80       	ld	r10, Z
 68e:	b1 80       	ldd	r11, Z+1	; 0x01
 690:	36 fe       	sbrs	r3, 6
 692:	03 c0       	rjmp	.+6      	; 0x69a <vfprintf+0x16c>
 694:	69 2d       	mov	r22, r9
 696:	70 e0       	ldi	r23, 0x00	; 0
 698:	02 c0       	rjmp	.+4      	; 0x69e <vfprintf+0x170>
 69a:	6f ef       	ldi	r22, 0xFF	; 255
 69c:	7f ef       	ldi	r23, 0xFF	; 255
 69e:	c5 01       	movw	r24, r10
 6a0:	4e d1       	rcall	.+668    	; 0x93e <strnlen>
 6a2:	4c 01       	movw	r8, r24
 6a4:	82 01       	movw	r16, r4
 6a6:	f3 2d       	mov	r31, r3
 6a8:	ff 77       	andi	r31, 0x7F	; 127
 6aa:	3f 2e       	mov	r3, r31
 6ac:	15 c0       	rjmp	.+42     	; 0x6d8 <vfprintf+0x1aa>
 6ae:	28 01       	movw	r4, r16
 6b0:	22 e0       	ldi	r18, 0x02	; 2
 6b2:	42 0e       	add	r4, r18
 6b4:	51 1c       	adc	r5, r1
 6b6:	f8 01       	movw	r30, r16
 6b8:	a0 80       	ld	r10, Z
 6ba:	b1 80       	ldd	r11, Z+1	; 0x01
 6bc:	36 fe       	sbrs	r3, 6
 6be:	03 c0       	rjmp	.+6      	; 0x6c6 <vfprintf+0x198>
 6c0:	69 2d       	mov	r22, r9
 6c2:	70 e0       	ldi	r23, 0x00	; 0
 6c4:	02 c0       	rjmp	.+4      	; 0x6ca <vfprintf+0x19c>
 6c6:	6f ef       	ldi	r22, 0xFF	; 255
 6c8:	7f ef       	ldi	r23, 0xFF	; 255
 6ca:	c5 01       	movw	r24, r10
 6cc:	2d d1       	rcall	.+602    	; 0x928 <strnlen_P>
 6ce:	4c 01       	movw	r8, r24
 6d0:	f3 2d       	mov	r31, r3
 6d2:	f0 68       	ori	r31, 0x80	; 128
 6d4:	3f 2e       	mov	r3, r31
 6d6:	82 01       	movw	r16, r4
 6d8:	33 fc       	sbrc	r3, 3
 6da:	19 c0       	rjmp	.+50     	; 0x70e <vfprintf+0x1e0>
 6dc:	82 2d       	mov	r24, r2
 6de:	90 e0       	ldi	r25, 0x00	; 0
 6e0:	88 16       	cp	r8, r24
 6e2:	99 06       	cpc	r9, r25
 6e4:	a0 f4       	brcc	.+40     	; 0x70e <vfprintf+0x1e0>
 6e6:	b6 01       	movw	r22, r12
 6e8:	80 e2       	ldi	r24, 0x20	; 32
 6ea:	90 e0       	ldi	r25, 0x00	; 0
 6ec:	33 d1       	rcall	.+614    	; 0x954 <fputc>
 6ee:	2a 94       	dec	r2
 6f0:	f5 cf       	rjmp	.-22     	; 0x6dc <vfprintf+0x1ae>
 6f2:	f5 01       	movw	r30, r10
 6f4:	37 fc       	sbrc	r3, 7
 6f6:	85 91       	lpm	r24, Z+
 6f8:	37 fe       	sbrs	r3, 7
 6fa:	81 91       	ld	r24, Z+
 6fc:	5f 01       	movw	r10, r30
 6fe:	b6 01       	movw	r22, r12
 700:	90 e0       	ldi	r25, 0x00	; 0
 702:	28 d1       	rcall	.+592    	; 0x954 <fputc>
 704:	21 10       	cpse	r2, r1
 706:	2a 94       	dec	r2
 708:	21 e0       	ldi	r18, 0x01	; 1
 70a:	82 1a       	sub	r8, r18
 70c:	91 08       	sbc	r9, r1
 70e:	81 14       	cp	r8, r1
 710:	91 04       	cpc	r9, r1
 712:	79 f7       	brne	.-34     	; 0x6f2 <vfprintf+0x1c4>
 714:	e1 c0       	rjmp	.+450    	; 0x8d8 <vfprintf+0x3aa>
 716:	84 36       	cpi	r24, 0x64	; 100
 718:	11 f0       	breq	.+4      	; 0x71e <vfprintf+0x1f0>
 71a:	89 36       	cpi	r24, 0x69	; 105
 71c:	39 f5       	brne	.+78     	; 0x76c <vfprintf+0x23e>
 71e:	f8 01       	movw	r30, r16
 720:	37 fe       	sbrs	r3, 7
 722:	07 c0       	rjmp	.+14     	; 0x732 <vfprintf+0x204>
 724:	60 81       	ld	r22, Z
 726:	71 81       	ldd	r23, Z+1	; 0x01
 728:	82 81       	ldd	r24, Z+2	; 0x02
 72a:	93 81       	ldd	r25, Z+3	; 0x03
 72c:	0c 5f       	subi	r16, 0xFC	; 252
 72e:	1f 4f       	sbci	r17, 0xFF	; 255
 730:	08 c0       	rjmp	.+16     	; 0x742 <vfprintf+0x214>
 732:	60 81       	ld	r22, Z
 734:	71 81       	ldd	r23, Z+1	; 0x01
 736:	07 2e       	mov	r0, r23
 738:	00 0c       	add	r0, r0
 73a:	88 0b       	sbc	r24, r24
 73c:	99 0b       	sbc	r25, r25
 73e:	0e 5f       	subi	r16, 0xFE	; 254
 740:	1f 4f       	sbci	r17, 0xFF	; 255
 742:	f3 2d       	mov	r31, r3
 744:	ff 76       	andi	r31, 0x6F	; 111
 746:	3f 2e       	mov	r3, r31
 748:	97 ff       	sbrs	r25, 7
 74a:	09 c0       	rjmp	.+18     	; 0x75e <vfprintf+0x230>
 74c:	90 95       	com	r25
 74e:	80 95       	com	r24
 750:	70 95       	com	r23
 752:	61 95       	neg	r22
 754:	7f 4f       	sbci	r23, 0xFF	; 255
 756:	8f 4f       	sbci	r24, 0xFF	; 255
 758:	9f 4f       	sbci	r25, 0xFF	; 255
 75a:	f0 68       	ori	r31, 0x80	; 128
 75c:	3f 2e       	mov	r3, r31
 75e:	2a e0       	ldi	r18, 0x0A	; 10
 760:	30 e0       	ldi	r19, 0x00	; 0
 762:	a3 01       	movw	r20, r6
 764:	33 d1       	rcall	.+614    	; 0x9cc <__ultoa_invert>
 766:	88 2e       	mov	r8, r24
 768:	86 18       	sub	r8, r6
 76a:	44 c0       	rjmp	.+136    	; 0x7f4 <vfprintf+0x2c6>
 76c:	85 37       	cpi	r24, 0x75	; 117
 76e:	31 f4       	brne	.+12     	; 0x77c <vfprintf+0x24e>
 770:	23 2d       	mov	r18, r3
 772:	2f 7e       	andi	r18, 0xEF	; 239
 774:	b2 2e       	mov	r11, r18
 776:	2a e0       	ldi	r18, 0x0A	; 10
 778:	30 e0       	ldi	r19, 0x00	; 0
 77a:	25 c0       	rjmp	.+74     	; 0x7c6 <vfprintf+0x298>
 77c:	93 2d       	mov	r25, r3
 77e:	99 7f       	andi	r25, 0xF9	; 249
 780:	b9 2e       	mov	r11, r25
 782:	8f 36       	cpi	r24, 0x6F	; 111
 784:	c1 f0       	breq	.+48     	; 0x7b6 <vfprintf+0x288>
 786:	18 f4       	brcc	.+6      	; 0x78e <vfprintf+0x260>
 788:	88 35       	cpi	r24, 0x58	; 88
 78a:	79 f0       	breq	.+30     	; 0x7aa <vfprintf+0x27c>
 78c:	ae c0       	rjmp	.+348    	; 0x8ea <vfprintf+0x3bc>
 78e:	80 37       	cpi	r24, 0x70	; 112
 790:	19 f0       	breq	.+6      	; 0x798 <vfprintf+0x26a>
 792:	88 37       	cpi	r24, 0x78	; 120
 794:	21 f0       	breq	.+8      	; 0x79e <vfprintf+0x270>
 796:	a9 c0       	rjmp	.+338    	; 0x8ea <vfprintf+0x3bc>
 798:	e9 2f       	mov	r30, r25
 79a:	e0 61       	ori	r30, 0x10	; 16
 79c:	be 2e       	mov	r11, r30
 79e:	b4 fe       	sbrs	r11, 4
 7a0:	0d c0       	rjmp	.+26     	; 0x7bc <vfprintf+0x28e>
 7a2:	fb 2d       	mov	r31, r11
 7a4:	f4 60       	ori	r31, 0x04	; 4
 7a6:	bf 2e       	mov	r11, r31
 7a8:	09 c0       	rjmp	.+18     	; 0x7bc <vfprintf+0x28e>
 7aa:	34 fe       	sbrs	r3, 4
 7ac:	0a c0       	rjmp	.+20     	; 0x7c2 <vfprintf+0x294>
 7ae:	29 2f       	mov	r18, r25
 7b0:	26 60       	ori	r18, 0x06	; 6
 7b2:	b2 2e       	mov	r11, r18
 7b4:	06 c0       	rjmp	.+12     	; 0x7c2 <vfprintf+0x294>
 7b6:	28 e0       	ldi	r18, 0x08	; 8
 7b8:	30 e0       	ldi	r19, 0x00	; 0
 7ba:	05 c0       	rjmp	.+10     	; 0x7c6 <vfprintf+0x298>
 7bc:	20 e1       	ldi	r18, 0x10	; 16
 7be:	30 e0       	ldi	r19, 0x00	; 0
 7c0:	02 c0       	rjmp	.+4      	; 0x7c6 <vfprintf+0x298>
 7c2:	20 e1       	ldi	r18, 0x10	; 16
 7c4:	32 e0       	ldi	r19, 0x02	; 2
 7c6:	f8 01       	movw	r30, r16
 7c8:	b7 fe       	sbrs	r11, 7
 7ca:	07 c0       	rjmp	.+14     	; 0x7da <vfprintf+0x2ac>
 7cc:	60 81       	ld	r22, Z
 7ce:	71 81       	ldd	r23, Z+1	; 0x01
 7d0:	82 81       	ldd	r24, Z+2	; 0x02
 7d2:	93 81       	ldd	r25, Z+3	; 0x03
 7d4:	0c 5f       	subi	r16, 0xFC	; 252
 7d6:	1f 4f       	sbci	r17, 0xFF	; 255
 7d8:	06 c0       	rjmp	.+12     	; 0x7e6 <vfprintf+0x2b8>
 7da:	60 81       	ld	r22, Z
 7dc:	71 81       	ldd	r23, Z+1	; 0x01
 7de:	80 e0       	ldi	r24, 0x00	; 0
 7e0:	90 e0       	ldi	r25, 0x00	; 0
 7e2:	0e 5f       	subi	r16, 0xFE	; 254
 7e4:	1f 4f       	sbci	r17, 0xFF	; 255
 7e6:	a3 01       	movw	r20, r6
 7e8:	f1 d0       	rcall	.+482    	; 0x9cc <__ultoa_invert>
 7ea:	88 2e       	mov	r8, r24
 7ec:	86 18       	sub	r8, r6
 7ee:	fb 2d       	mov	r31, r11
 7f0:	ff 77       	andi	r31, 0x7F	; 127
 7f2:	3f 2e       	mov	r3, r31
 7f4:	36 fe       	sbrs	r3, 6
 7f6:	0d c0       	rjmp	.+26     	; 0x812 <vfprintf+0x2e4>
 7f8:	23 2d       	mov	r18, r3
 7fa:	2e 7f       	andi	r18, 0xFE	; 254
 7fc:	a2 2e       	mov	r10, r18
 7fe:	89 14       	cp	r8, r9
 800:	58 f4       	brcc	.+22     	; 0x818 <vfprintf+0x2ea>
 802:	34 fe       	sbrs	r3, 4
 804:	0b c0       	rjmp	.+22     	; 0x81c <vfprintf+0x2ee>
 806:	32 fc       	sbrc	r3, 2
 808:	09 c0       	rjmp	.+18     	; 0x81c <vfprintf+0x2ee>
 80a:	83 2d       	mov	r24, r3
 80c:	8e 7e       	andi	r24, 0xEE	; 238
 80e:	a8 2e       	mov	r10, r24
 810:	05 c0       	rjmp	.+10     	; 0x81c <vfprintf+0x2ee>
 812:	b8 2c       	mov	r11, r8
 814:	a3 2c       	mov	r10, r3
 816:	03 c0       	rjmp	.+6      	; 0x81e <vfprintf+0x2f0>
 818:	b8 2c       	mov	r11, r8
 81a:	01 c0       	rjmp	.+2      	; 0x81e <vfprintf+0x2f0>
 81c:	b9 2c       	mov	r11, r9
 81e:	a4 fe       	sbrs	r10, 4
 820:	0f c0       	rjmp	.+30     	; 0x840 <vfprintf+0x312>
 822:	fe 01       	movw	r30, r28
 824:	e8 0d       	add	r30, r8
 826:	f1 1d       	adc	r31, r1
 828:	80 81       	ld	r24, Z
 82a:	80 33       	cpi	r24, 0x30	; 48
 82c:	21 f4       	brne	.+8      	; 0x836 <vfprintf+0x308>
 82e:	9a 2d       	mov	r25, r10
 830:	99 7e       	andi	r25, 0xE9	; 233
 832:	a9 2e       	mov	r10, r25
 834:	09 c0       	rjmp	.+18     	; 0x848 <vfprintf+0x31a>
 836:	a2 fe       	sbrs	r10, 2
 838:	06 c0       	rjmp	.+12     	; 0x846 <vfprintf+0x318>
 83a:	b3 94       	inc	r11
 83c:	b3 94       	inc	r11
 83e:	04 c0       	rjmp	.+8      	; 0x848 <vfprintf+0x31a>
 840:	8a 2d       	mov	r24, r10
 842:	86 78       	andi	r24, 0x86	; 134
 844:	09 f0       	breq	.+2      	; 0x848 <vfprintf+0x31a>
 846:	b3 94       	inc	r11
 848:	a3 fc       	sbrc	r10, 3
 84a:	10 c0       	rjmp	.+32     	; 0x86c <vfprintf+0x33e>
 84c:	a0 fe       	sbrs	r10, 0
 84e:	06 c0       	rjmp	.+12     	; 0x85c <vfprintf+0x32e>
 850:	b2 14       	cp	r11, r2
 852:	80 f4       	brcc	.+32     	; 0x874 <vfprintf+0x346>
 854:	28 0c       	add	r2, r8
 856:	92 2c       	mov	r9, r2
 858:	9b 18       	sub	r9, r11
 85a:	0d c0       	rjmp	.+26     	; 0x876 <vfprintf+0x348>
 85c:	b2 14       	cp	r11, r2
 85e:	58 f4       	brcc	.+22     	; 0x876 <vfprintf+0x348>
 860:	b6 01       	movw	r22, r12
 862:	80 e2       	ldi	r24, 0x20	; 32
 864:	90 e0       	ldi	r25, 0x00	; 0
 866:	76 d0       	rcall	.+236    	; 0x954 <fputc>
 868:	b3 94       	inc	r11
 86a:	f8 cf       	rjmp	.-16     	; 0x85c <vfprintf+0x32e>
 86c:	b2 14       	cp	r11, r2
 86e:	18 f4       	brcc	.+6      	; 0x876 <vfprintf+0x348>
 870:	2b 18       	sub	r2, r11
 872:	02 c0       	rjmp	.+4      	; 0x878 <vfprintf+0x34a>
 874:	98 2c       	mov	r9, r8
 876:	21 2c       	mov	r2, r1
 878:	a4 fe       	sbrs	r10, 4
 87a:	0f c0       	rjmp	.+30     	; 0x89a <vfprintf+0x36c>
 87c:	b6 01       	movw	r22, r12
 87e:	80 e3       	ldi	r24, 0x30	; 48
 880:	90 e0       	ldi	r25, 0x00	; 0
 882:	68 d0       	rcall	.+208    	; 0x954 <fputc>
 884:	a2 fe       	sbrs	r10, 2
 886:	16 c0       	rjmp	.+44     	; 0x8b4 <vfprintf+0x386>
 888:	a1 fc       	sbrc	r10, 1
 88a:	03 c0       	rjmp	.+6      	; 0x892 <vfprintf+0x364>
 88c:	88 e7       	ldi	r24, 0x78	; 120
 88e:	90 e0       	ldi	r25, 0x00	; 0
 890:	02 c0       	rjmp	.+4      	; 0x896 <vfprintf+0x368>
 892:	88 e5       	ldi	r24, 0x58	; 88
 894:	90 e0       	ldi	r25, 0x00	; 0
 896:	b6 01       	movw	r22, r12
 898:	0c c0       	rjmp	.+24     	; 0x8b2 <vfprintf+0x384>
 89a:	8a 2d       	mov	r24, r10
 89c:	86 78       	andi	r24, 0x86	; 134
 89e:	51 f0       	breq	.+20     	; 0x8b4 <vfprintf+0x386>
 8a0:	a1 fe       	sbrs	r10, 1
 8a2:	02 c0       	rjmp	.+4      	; 0x8a8 <vfprintf+0x37a>
 8a4:	8b e2       	ldi	r24, 0x2B	; 43
 8a6:	01 c0       	rjmp	.+2      	; 0x8aa <vfprintf+0x37c>
 8a8:	80 e2       	ldi	r24, 0x20	; 32
 8aa:	a7 fc       	sbrc	r10, 7
 8ac:	8d e2       	ldi	r24, 0x2D	; 45
 8ae:	b6 01       	movw	r22, r12
 8b0:	90 e0       	ldi	r25, 0x00	; 0
 8b2:	50 d0       	rcall	.+160    	; 0x954 <fputc>
 8b4:	89 14       	cp	r8, r9
 8b6:	30 f4       	brcc	.+12     	; 0x8c4 <vfprintf+0x396>
 8b8:	b6 01       	movw	r22, r12
 8ba:	80 e3       	ldi	r24, 0x30	; 48
 8bc:	90 e0       	ldi	r25, 0x00	; 0
 8be:	4a d0       	rcall	.+148    	; 0x954 <fputc>
 8c0:	9a 94       	dec	r9
 8c2:	f8 cf       	rjmp	.-16     	; 0x8b4 <vfprintf+0x386>
 8c4:	8a 94       	dec	r8
 8c6:	f3 01       	movw	r30, r6
 8c8:	e8 0d       	add	r30, r8
 8ca:	f1 1d       	adc	r31, r1
 8cc:	80 81       	ld	r24, Z
 8ce:	b6 01       	movw	r22, r12
 8d0:	90 e0       	ldi	r25, 0x00	; 0
 8d2:	40 d0       	rcall	.+128    	; 0x954 <fputc>
 8d4:	81 10       	cpse	r8, r1
 8d6:	f6 cf       	rjmp	.-20     	; 0x8c4 <vfprintf+0x396>
 8d8:	22 20       	and	r2, r2
 8da:	09 f4       	brne	.+2      	; 0x8de <vfprintf+0x3b0>
 8dc:	4e ce       	rjmp	.-868    	; 0x57a <vfprintf+0x4c>
 8de:	b6 01       	movw	r22, r12
 8e0:	80 e2       	ldi	r24, 0x20	; 32
 8e2:	90 e0       	ldi	r25, 0x00	; 0
 8e4:	37 d0       	rcall	.+110    	; 0x954 <fputc>
 8e6:	2a 94       	dec	r2
 8e8:	f7 cf       	rjmp	.-18     	; 0x8d8 <vfprintf+0x3aa>
 8ea:	f6 01       	movw	r30, r12
 8ec:	86 81       	ldd	r24, Z+6	; 0x06
 8ee:	97 81       	ldd	r25, Z+7	; 0x07
 8f0:	02 c0       	rjmp	.+4      	; 0x8f6 <vfprintf+0x3c8>
 8f2:	8f ef       	ldi	r24, 0xFF	; 255
 8f4:	9f ef       	ldi	r25, 0xFF	; 255
 8f6:	2b 96       	adiw	r28, 0x0b	; 11
 8f8:	0f b6       	in	r0, 0x3f	; 63
 8fa:	f8 94       	cli
 8fc:	de bf       	out	0x3e, r29	; 62
 8fe:	0f be       	out	0x3f, r0	; 63
 900:	cd bf       	out	0x3d, r28	; 61
 902:	df 91       	pop	r29
 904:	cf 91       	pop	r28
 906:	1f 91       	pop	r17
 908:	0f 91       	pop	r16
 90a:	ff 90       	pop	r15
 90c:	ef 90       	pop	r14
 90e:	df 90       	pop	r13
 910:	cf 90       	pop	r12
 912:	bf 90       	pop	r11
 914:	af 90       	pop	r10
 916:	9f 90       	pop	r9
 918:	8f 90       	pop	r8
 91a:	7f 90       	pop	r7
 91c:	6f 90       	pop	r6
 91e:	5f 90       	pop	r5
 920:	4f 90       	pop	r4
 922:	3f 90       	pop	r3
 924:	2f 90       	pop	r2
 926:	08 95       	ret

00000928 <strnlen_P>:
 928:	fc 01       	movw	r30, r24
 92a:	05 90       	lpm	r0, Z+
 92c:	61 50       	subi	r22, 0x01	; 1
 92e:	70 40       	sbci	r23, 0x00	; 0
 930:	01 10       	cpse	r0, r1
 932:	d8 f7       	brcc	.-10     	; 0x92a <strnlen_P+0x2>
 934:	80 95       	com	r24
 936:	90 95       	com	r25
 938:	8e 0f       	add	r24, r30
 93a:	9f 1f       	adc	r25, r31
 93c:	08 95       	ret

0000093e <strnlen>:
 93e:	fc 01       	movw	r30, r24
 940:	61 50       	subi	r22, 0x01	; 1
 942:	70 40       	sbci	r23, 0x00	; 0
 944:	01 90       	ld	r0, Z+
 946:	01 10       	cpse	r0, r1
 948:	d8 f7       	brcc	.-10     	; 0x940 <strnlen+0x2>
 94a:	80 95       	com	r24
 94c:	90 95       	com	r25
 94e:	8e 0f       	add	r24, r30
 950:	9f 1f       	adc	r25, r31
 952:	08 95       	ret

00000954 <fputc>:
 954:	0f 93       	push	r16
 956:	1f 93       	push	r17
 958:	cf 93       	push	r28
 95a:	df 93       	push	r29
 95c:	fb 01       	movw	r30, r22
 95e:	23 81       	ldd	r18, Z+3	; 0x03
 960:	21 fd       	sbrc	r18, 1
 962:	03 c0       	rjmp	.+6      	; 0x96a <fputc+0x16>
 964:	8f ef       	ldi	r24, 0xFF	; 255
 966:	9f ef       	ldi	r25, 0xFF	; 255
 968:	2c c0       	rjmp	.+88     	; 0x9c2 <fputc+0x6e>
 96a:	22 ff       	sbrs	r18, 2
 96c:	16 c0       	rjmp	.+44     	; 0x99a <fputc+0x46>
 96e:	46 81       	ldd	r20, Z+6	; 0x06
 970:	57 81       	ldd	r21, Z+7	; 0x07
 972:	24 81       	ldd	r18, Z+4	; 0x04
 974:	35 81       	ldd	r19, Z+5	; 0x05
 976:	42 17       	cp	r20, r18
 978:	53 07       	cpc	r21, r19
 97a:	44 f4       	brge	.+16     	; 0x98c <fputc+0x38>
 97c:	a0 81       	ld	r26, Z
 97e:	b1 81       	ldd	r27, Z+1	; 0x01
 980:	9d 01       	movw	r18, r26
 982:	2f 5f       	subi	r18, 0xFF	; 255
 984:	3f 4f       	sbci	r19, 0xFF	; 255
 986:	31 83       	std	Z+1, r19	; 0x01
 988:	20 83       	st	Z, r18
 98a:	8c 93       	st	X, r24
 98c:	26 81       	ldd	r18, Z+6	; 0x06
 98e:	37 81       	ldd	r19, Z+7	; 0x07
 990:	2f 5f       	subi	r18, 0xFF	; 255
 992:	3f 4f       	sbci	r19, 0xFF	; 255
 994:	37 83       	std	Z+7, r19	; 0x07
 996:	26 83       	std	Z+6, r18	; 0x06
 998:	14 c0       	rjmp	.+40     	; 0x9c2 <fputc+0x6e>
 99a:	8b 01       	movw	r16, r22
 99c:	ec 01       	movw	r28, r24
 99e:	fb 01       	movw	r30, r22
 9a0:	00 84       	ldd	r0, Z+8	; 0x08
 9a2:	f1 85       	ldd	r31, Z+9	; 0x09
 9a4:	e0 2d       	mov	r30, r0
 9a6:	09 95       	icall
 9a8:	89 2b       	or	r24, r25
 9aa:	e1 f6       	brne	.-72     	; 0x964 <fputc+0x10>
 9ac:	d8 01       	movw	r26, r16
 9ae:	16 96       	adiw	r26, 0x06	; 6
 9b0:	8d 91       	ld	r24, X+
 9b2:	9c 91       	ld	r25, X
 9b4:	17 97       	sbiw	r26, 0x07	; 7
 9b6:	01 96       	adiw	r24, 0x01	; 1
 9b8:	17 96       	adiw	r26, 0x07	; 7
 9ba:	9c 93       	st	X, r25
 9bc:	8e 93       	st	-X, r24
 9be:	16 97       	sbiw	r26, 0x06	; 6
 9c0:	ce 01       	movw	r24, r28
 9c2:	df 91       	pop	r29
 9c4:	cf 91       	pop	r28
 9c6:	1f 91       	pop	r17
 9c8:	0f 91       	pop	r16
 9ca:	08 95       	ret

000009cc <__ultoa_invert>:
 9cc:	fa 01       	movw	r30, r20
 9ce:	aa 27       	eor	r26, r26
 9d0:	28 30       	cpi	r18, 0x08	; 8
 9d2:	51 f1       	breq	.+84     	; 0xa28 <__ultoa_invert+0x5c>
 9d4:	20 31       	cpi	r18, 0x10	; 16
 9d6:	81 f1       	breq	.+96     	; 0xa38 <__ultoa_invert+0x6c>
 9d8:	e8 94       	clt
 9da:	6f 93       	push	r22
 9dc:	6e 7f       	andi	r22, 0xFE	; 254
 9de:	6e 5f       	subi	r22, 0xFE	; 254
 9e0:	7f 4f       	sbci	r23, 0xFF	; 255
 9e2:	8f 4f       	sbci	r24, 0xFF	; 255
 9e4:	9f 4f       	sbci	r25, 0xFF	; 255
 9e6:	af 4f       	sbci	r26, 0xFF	; 255
 9e8:	b1 e0       	ldi	r27, 0x01	; 1
 9ea:	3e d0       	rcall	.+124    	; 0xa68 <__ultoa_invert+0x9c>
 9ec:	b4 e0       	ldi	r27, 0x04	; 4
 9ee:	3c d0       	rcall	.+120    	; 0xa68 <__ultoa_invert+0x9c>
 9f0:	67 0f       	add	r22, r23
 9f2:	78 1f       	adc	r23, r24
 9f4:	89 1f       	adc	r24, r25
 9f6:	9a 1f       	adc	r25, r26
 9f8:	a1 1d       	adc	r26, r1
 9fa:	68 0f       	add	r22, r24
 9fc:	79 1f       	adc	r23, r25
 9fe:	8a 1f       	adc	r24, r26
 a00:	91 1d       	adc	r25, r1
 a02:	a1 1d       	adc	r26, r1
 a04:	6a 0f       	add	r22, r26
 a06:	71 1d       	adc	r23, r1
 a08:	81 1d       	adc	r24, r1
 a0a:	91 1d       	adc	r25, r1
 a0c:	a1 1d       	adc	r26, r1
 a0e:	20 d0       	rcall	.+64     	; 0xa50 <__ultoa_invert+0x84>
 a10:	09 f4       	brne	.+2      	; 0xa14 <__ultoa_invert+0x48>
 a12:	68 94       	set
 a14:	3f 91       	pop	r19
 a16:	2a e0       	ldi	r18, 0x0A	; 10
 a18:	26 9f       	mul	r18, r22
 a1a:	11 24       	eor	r1, r1
 a1c:	30 19       	sub	r19, r0
 a1e:	30 5d       	subi	r19, 0xD0	; 208
 a20:	31 93       	st	Z+, r19
 a22:	de f6       	brtc	.-74     	; 0x9da <__ultoa_invert+0xe>
 a24:	cf 01       	movw	r24, r30
 a26:	08 95       	ret
 a28:	46 2f       	mov	r20, r22
 a2a:	47 70       	andi	r20, 0x07	; 7
 a2c:	40 5d       	subi	r20, 0xD0	; 208
 a2e:	41 93       	st	Z+, r20
 a30:	b3 e0       	ldi	r27, 0x03	; 3
 a32:	0f d0       	rcall	.+30     	; 0xa52 <__ultoa_invert+0x86>
 a34:	c9 f7       	brne	.-14     	; 0xa28 <__ultoa_invert+0x5c>
 a36:	f6 cf       	rjmp	.-20     	; 0xa24 <__ultoa_invert+0x58>
 a38:	46 2f       	mov	r20, r22
 a3a:	4f 70       	andi	r20, 0x0F	; 15
 a3c:	40 5d       	subi	r20, 0xD0	; 208
 a3e:	4a 33       	cpi	r20, 0x3A	; 58
 a40:	18 f0       	brcs	.+6      	; 0xa48 <__ultoa_invert+0x7c>
 a42:	49 5d       	subi	r20, 0xD9	; 217
 a44:	31 fd       	sbrc	r19, 1
 a46:	40 52       	subi	r20, 0x20	; 32
 a48:	41 93       	st	Z+, r20
 a4a:	02 d0       	rcall	.+4      	; 0xa50 <__ultoa_invert+0x84>
 a4c:	a9 f7       	brne	.-22     	; 0xa38 <__ultoa_invert+0x6c>
 a4e:	ea cf       	rjmp	.-44     	; 0xa24 <__ultoa_invert+0x58>
 a50:	b4 e0       	ldi	r27, 0x04	; 4
 a52:	a6 95       	lsr	r26
 a54:	97 95       	ror	r25
 a56:	87 95       	ror	r24
 a58:	77 95       	ror	r23
 a5a:	67 95       	ror	r22
 a5c:	ba 95       	dec	r27
 a5e:	c9 f7       	brne	.-14     	; 0xa52 <__ultoa_invert+0x86>
 a60:	00 97       	sbiw	r24, 0x00	; 0
 a62:	61 05       	cpc	r22, r1
 a64:	71 05       	cpc	r23, r1
 a66:	08 95       	ret
 a68:	9b 01       	movw	r18, r22
 a6a:	ac 01       	movw	r20, r24
 a6c:	0a 2e       	mov	r0, r26
 a6e:	06 94       	lsr	r0
 a70:	57 95       	ror	r21
 a72:	47 95       	ror	r20
 a74:	37 95       	ror	r19
 a76:	27 95       	ror	r18
 a78:	ba 95       	dec	r27
 a7a:	c9 f7       	brne	.-14     	; 0xa6e <__ultoa_invert+0xa2>
 a7c:	62 0f       	add	r22, r18
 a7e:	73 1f       	adc	r23, r19
 a80:	84 1f       	adc	r24, r20
 a82:	95 1f       	adc	r25, r21
 a84:	a0 1d       	adc	r26, r0
 a86:	08 95       	ret

00000a88 <_exit>:
 a88:	f8 94       	cli

00000a8a <__stop_program>:
 a8a:	ff cf       	rjmp	.-2      	; 0xa8a <__stop_program>
